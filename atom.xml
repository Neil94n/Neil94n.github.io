<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Neil&#39;s Blog</title>
  
  <subtitle>求知若饥 虚心似谷</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-11-23T03:50:54.338Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Neil Ni</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>浅谈命令行（三）：如何登录开发机</title>
    <link href="http://yoursite.com/2018/11/23/%E6%B5%85%E8%B0%88%E5%91%BD%E4%BB%A4%E8%A1%8C%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E5%A6%82%E4%BD%95%E7%99%BB%E5%BD%95%E5%BC%80%E5%8F%91%E6%9C%BA/"/>
    <id>http://yoursite.com/2018/11/23/浅谈命令行（三）：如何登录开发机/</id>
    <published>2018-11-23T03:50:54.000Z</published>
    <updated>2018-11-23T03:50:54.338Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>shadowsocks入坑不完全指南</title>
    <link href="http://yoursite.com/2018/11/07/shadowsocks%E5%85%A5%E5%9D%91%E4%B8%8D%E5%AE%8C%E5%85%A8%E6%8C%87%E5%8D%97/"/>
    <id>http://yoursite.com/2018/11/07/shadowsocks入坑不完全指南/</id>
    <published>2018-11-07T03:51:15.000Z</published>
    <updated>2018-11-23T05:52:49.613Z</updated>
    
    <content type="html"><![CDATA[<p>​        国内的网络环境我不说相信大家都懂。虽然墙内的世界很丰富，但是墙外的世界还有着更加精彩的内容。以前上大学时候搜过免费fq教程，体验 Google 搜索、体验 Youtube、查阅学习资料，还有玩的部分游戏，然而大多数免费的不说麻烦而且不稳定，在别人的介绍下跳入了 Shadowsocks 的坑。已经用了快一年，最近又续了1年，访问速度也很快，强烈推荐给大家使用！！！（当然有的大神说，我就用免费的，你自己辣鸡不会搞，还好意思瞎bb，对对对，你说的都对，我辣鸡我只能用付费版的。）不多BB直接进入正题。</p><a id="more"></a><h1 id="购买服务"><a href="#购买服务" class="headerlink" title="购买服务"></a>购买服务</h1><ol><li><p>点击进入 <a href="https://portal.shadowsocks.nu/aff.php?aff=19090" target="_blank" rel="noopener">Shadowsocks</a>，进入首页后选择 <code>订购服务</code>。</p></li><li><p>之后选择你想要购买的服务，点击现在订购。我选择的是 <code>Shadowsocks.com 入门版</code>。需要注意的是，虽然显示的价格是美元，但是在后面支付的时候会自动转化为人民币。<br><img src="https://i.loli.net/2018/11/21/5bf53dd99cbb7.png" alt="img"></p></li><li><p>界面上选择你想要购买的类型，然后点击订购。</p></li><li><p>在结账页面，你需要填写各种信息，需要认真填写，这也是在创建账号。</p></li><li><p>Shadowsocks 支持 Alipay 支付宝国际版。之后付款就可以了，前两天续费的时候是99.25人民币，平均8块多一个月，还是可以接受的（每个月少喝两瓶肥宅快乐水少抽包烟就是了）。</p></li><li><p>之后进入 <a href="https://portal.shadowsocks.com/clientarea.php" target="_blank" rel="noopener">客户中心</a>，用第4步创建的账号登陆。</p></li><li><p>点击产品服务，可以看到你刚刚购买的服务，状态为有效。<br><img src="https://i.loli.net/2018/11/21/5bf53ea062ff9.png" alt="img"></p></li><li><p>点击刚刚购买的服务，会看到产品详情。下面有配置文件下载，选择 Windows 版下载。下载下来是 <code>gui-config.json</code>。</p><p><img src="https://i.loli.net/2018/11/21/5bf53fe80b701.png" alt="img"><br>​                                                            <img src="https://i.loli.net/2018/11/21/5bf53fe7382ea.png" alt="img"></p></li></ol><h1 id="客户端安装使用"><a href="#客户端安装使用" class="headerlink" title="客户端安装使用"></a>客户端安装使用</h1><p>支持的客户端：OS X， Windows， Linux， iOS， Android， OpenWRT 路由器等。<br>详情请参考：<a href="https://shadowsocks.com/client.html" target="_blank" rel="noopener">客户端 - Shadowsocks</a>，客户端都在 Github 上。</p><h2 id="Windows-客户端"><a href="#Windows-客户端" class="headerlink" title="Windows 客户端"></a>Windows 客户端</h2><ol><li>直接去 <a href="http://link.zhihu.com/?target=https%3A//github.com/shadowsocks/shadowsocks-windows/releases" target="_blank" rel="noopener">Github - Shadowsocks Windows</a> 上下载吧，我的版本有点旧了也没更新。</li><li>解压后有一个 <code>Shadowsocks.exe</code> 文件。最好把这个文件放到一个目录下，比如新建一个 Shadowsocks 文件夹。</li><li>把刚刚下载的 <code>gui-config.json</code> 文件放到与 <code>Shadowsocks.exe</code> 相同的目录下。</li><li>双击 <code>Shadowsocks.exe</code>，会出现一个 GUI 界面，自动读取了 <code>gui-config.json</code> 文件中的内容。<br><a href="http://www.cylong.com/blog/2016/05/26/shadowsocks/Windows-Shadowsocks-gui.png" target="_blank" rel="noopener"><img src="http://www.cylong.com/blog/2016/05/26/shadowsocks/Windows-Shadowsocks-gui.png" alt="Windows Shadowsocks 图形界面"></a></li><li>在右下角托盘图标上会有一个好像纸飞机的 Shadowsocks 图标，<code>右键-&gt;启动系统代理</code>，就可以越过墙壁，浏览更多丰富多彩的内容啦~<br><a href="http://www.cylong.com/blog/2016/05/26/shadowsocks/Shadowsocks-menu.png" target="_blank" rel="noopener"><img src="http://www.cylong.com/blog/2016/05/26/shadowsocks/Shadowsocks-menu.png" alt="Shadowsocks 菜单"></a></li><li>另外建议设置成 <code>右键-&gt;开机启动</code>，这样不用每次开机手动启动了。还可以在 <code>右键-&gt;服务器</code> 中选择不同的服务器。</li></ol><h2 id="Linux-客户端"><a href="#Linux-客户端" class="headerlink" title="Linux 客户端"></a>Linux 客户端</h2><ol><li><p>首先你需要下载 <a href="http://www.google.cn/chrome/browser/desktop/index.html" target="_blank" rel="noopener">Chrome 浏览器</a> 【不需要翻墙】，已经有的小伙伴就不用重新下载了。</p></li><li><p>使用如下命令安装你下载下来的 Chrome 安装包：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg -i xxx-chrome-xxx.deb</span><br></pre></td></tr></table></figure></li><li><p>通过 PPA 源安装 Shadowsocks-qt5，仅支持 Ubuntu 14.04 或更高版本。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:hzwhuang/ss-qt5</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install shadowsocks-qt5</span><br></pre></td></tr></table></figure></li><li><p>之后就可以在应用列表里搜索到 Shadowsocks-qt5 了<br><a href="http://www.cylong.com/blog/2016/05/26/shadowsocks/search-shadowsocks.png" target="_blank" rel="noopener"><img src="http://www.cylong.com/blog/2016/05/26/shadowsocks/search-shadowsocks.png" alt="搜索应用列表"></a></p></li><li><p>打开图形化界面，点击 <code>文件 -&gt; 从 gui-config.json 导入链接</code>，接着就会像下图一样。<br><a href="http://www.cylong.com/blog/2016/05/26/shadowsocks/Shadowsocks-Qt5-GUI.png" target="_blank" rel="noopener"><img src="http://www.cylong.com/blog/2016/05/26/shadowsocks/Shadowsocks-Qt5-GUI.png" alt="Shadowsocks-Qt5 图形界面"></a></p></li><li><p>上图的 jp01 和 us01 都是后来配置好的，导入 gui-config.json 后还是有些需要自己配置。双击某一条连接，像我如下这样配置【默认有的配置就不要改了】：<br><a href="http://www.cylong.com/blog/2016/05/26/shadowsocks/config.png" target="_blank" rel="noopener"><img src="http://www.cylong.com/blog/2016/05/26/shadowsocks/config.png" alt="连接配置"></a></p></li><li><p>配置完成后点击 <code>OK</code>，再点击界面上面的 <code>连接</code>，测试下延迟，看看是否能连接上。可以多配置几个，方便切换~</p></li><li><p>接下来就是配置 Chrome，让 Chrome 可以使用代理。我们需要安装SwitchyOmega插件。请参考 <a href="https://neil94n.github.io/2018/11/07/Chrome%20%E9%85%8D%E7%BD%AE%20SwitchyOmega%E5%BF%AB%E4%B9%90%E4%B8%8A%E7%BD%91%E6%95%99%E7%A8%8B/" target="_blank" rel="noopener">Chrome 配置 SwitchyOmega快乐上网教程</a>。有需要补充的小伙伴也可以交 ♂ 流下~</p></li></ol><h2 id="IOS-客户端"><a href="#IOS-客户端" class="headerlink" title="IOS 客户端"></a>IOS 客户端</h2><p>没有苹果设备。。。老哥们自己研究吧！去 <a href="https://shadowsocks.com/client.html" target="_blank" rel="noopener">客户端 - Shadowsocks</a> 可以找到相关的客户端。</p><h1 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h1><ul><li>要是偶尔发现网络不稳定，切换线路试一下。</li><li>不要同时在多台设备上使用，也不要把配置文件分享给其他人，可能会遭到封号行为。不过手机和 PC 同时使用时没事的。</li></ul><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><blockquote><p><a href="https://github.com/shadowsocks/shadowsocks-qt5/wiki" target="_blank" rel="noopener">中文文档 - Shadowsocks-qt5</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;​        国内的网络环境我不说相信大家都懂。虽然墙内的世界很丰富，但是墙外的世界还有着更加精彩的内容。以前上大学时候搜过免费fq教程，体验 Google 搜索、体验 Youtube、查阅学习资料，还有玩的部分游戏，然而大多数免费的不说麻烦而且不稳定，在别人的介绍下跳入了 Shadowsocks 的坑。已经用了快一年，最近又续了1年，访问速度也很快，强烈推荐给大家使用！！！（当然有的大神说，我就用免费的，你自己辣鸡不会搞，还好意思瞎bb，对对对，你说的都对，我辣鸡我只能用付费版的。）不多BB直接进入正题。&lt;/p&gt;
    
    </summary>
    
      <category term="科学上网" scheme="http://yoursite.com/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
    
      <category term="shadowsocks" scheme="http://yoursite.com/tags/shadowsocks/"/>
    
  </entry>
  
  <entry>
    <title>Chrome 配置 SwitchyOmega快乐上网教程</title>
    <link href="http://yoursite.com/2018/11/07/Chrome%20%E9%85%8D%E7%BD%AE%20SwitchyOmega%E5%BF%AB%E4%B9%90%E4%B8%8A%E7%BD%91%E6%95%99%E7%A8%8B/"/>
    <id>http://yoursite.com/2018/11/07/Chrome 配置 SwitchyOmega快乐上网教程/</id>
    <published>2018-11-07T03:50:35.000Z</published>
    <updated>2018-11-23T05:53:01.394Z</updated>
    
    <content type="html"><![CDATA[<p>此文章是以 Shadowsocks 代理为例，若想使用 Shadowsocks 请先安装对应系统的客户端并启动。详情请参考我的另一篇文章<a href="https://neil94n.github.io/2018/11/07/shadowsocks%E5%85%A5%E5%9D%91%E4%B8%8D%E5%AE%8C%E5%85%A8%E6%8C%87%E5%8D%97/" target="_blank" rel="noopener">shadowsocks入坑不完全指南</a>。</p><h1 id="Chrome-浏览器"><a href="#Chrome-浏览器" class="headerlink" title="Chrome 浏览器"></a>Chrome 浏览器</h1><p>无论是用户体验、强大的功能还是丰富的扩展程序都完爆国内的各种浏览器好不好。目前已经可以在不翻墙的情况下去 <a href="http://www.google.cn/chrome/browser/desktop/index.html" target="_blank" rel="noopener">下载 Chrome（桌面版）</a>了，账号数据同步方面也不需要翻墙了。</p><a id="more"></a><h1 id="SwitchyOmega"><a href="#SwitchyOmega" class="headerlink" title="SwitchyOmega"></a>SwitchyOmega</h1><p>Google Chrome 浏览器上的一个代理扩展程序，可以轻松快捷地管理和切换多个代理设置。比如我们接下来要介绍的 <code>自动切换模式</code>。</p><h2 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h2><p>直接打开Chrome应用商店搜索SwitchyOmega然后安装插件就可以了。</p><p><img src="https://i.loli.net/2018/11/21/5bf544aa6c18e.jpg" alt="img"></p><h2 id="配置-Shadowsocks-情景模式"><a href="#配置-Shadowsocks-情景模式" class="headerlink" title="配置 Shadowsocks 情景模式"></a>配置 Shadowsocks 情景模式</h2><ol><li><p>打开 Chrome， 点击右上角的  图标，再点击 <code>选项</code>。</p><p><img src="https://i.loli.net/2018/11/21/5bf544aaba170.png" alt="img"></p></li><li><p>点击左侧的 <code>新建情景模式</code></p></li><li><p>输入情景模式名称 <code>ss</code>【自己任意设置名称】，类型选择第一个<code>代理服务器</code>。创建完成后做如下配置：<br><img src="https://i.loli.net/2018/11/21/5bf544ac23c15.png" alt="img"></p></li></ol><p><img src="https://i.loli.net/2018/11/21/5bf544ac0d0d1.png" alt="img"></p><h2 id="配置自动切换模式"><a href="#配置自动切换模式" class="headerlink" title="配置自动切换模式"></a>配置自动切换模式</h2><p>配置好 Shadowsocks 情景模式后虽然可以使用 Chrome 浏览器科学上网了，但是这样的话无论你访问什么网站都会走代理，有时候访问国内的一些网站反而会很慢，这时候自动切换模式就解决了这个问题。下面介绍一下如何配置自动切换模式。</p><ol><li>点击左侧的 <code>自动切换</code>，或者自己新建情景模式，类型选择第二个 <code>自动切换模式</code>。然后做如下配置：<br><img src="https://i.loli.net/2018/11/21/5bf544ac466ea.png" alt="img"></li></ol><ul><li><p><code>切换规则</code> 是在访问 <code>条件设置</code> 的域名时候使用后面设置的 <code>情景模式</code>。比如图中我设置 <code>*.google.com</code> 和 <code>*.twitter.com</code> 使用 <code>ss</code> 情景模式【刚刚创建的那个情景模式】。我们可以点击 <code>添加条件</code> 来添加自己的规则。</p></li><li><p>将图中</p></li></ul>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">规则列表规则</span><br></pre></td></tr></table></figure><p>  前面的框打√，再将后面的</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">情景模式</span><br></pre></td></tr></table></figure><p>  设置为</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ss</span><br></pre></td></tr></table></figure><p>  ，意思是规则列表中的内容，我们使用</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ss</span><br></pre></td></tr></table></figure><p>  情景模式。然后</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">规则列表设置</span><br></pre></td></tr></table></figure><p>  中：</p><ul><li>规则列表格式： AutoProxy；</li><li><p>规则列表网址： <a href="https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt" target="_blank" rel="noopener">https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt</a></p><p><strong>ps:如果需要更新直接更新就可以了</strong></p></li></ul><ul><li><p>这样设置完成 <code>规则列表规则</code> 后就不需要在切换规则中一个一个添加条件了。</p></li><li><p><code>切换规则</code> 最后一行的 <code>默认情景模式</code> 代表不在规则列表中网址我们使用 <code>直接连接</code> 情景模式，也就是说不走代理。</p></li></ul><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><blockquote><p><a href="https://github.com/FelisCatus/SwitchyOmega" target="_blank" rel="noopener">Github-SwitchyOmega</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;此文章是以 Shadowsocks 代理为例，若想使用 Shadowsocks 请先安装对应系统的客户端并启动。详情请参考我的另一篇文章&lt;a href=&quot;https://neil94n.github.io/2018/11/07/shadowsocks%E5%85%A5%E5%9D%91%E4%B8%8D%E5%AE%8C%E5%85%A8%E6%8C%87%E5%8D%97/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;shadowsocks入坑不完全指南&lt;/a&gt;。&lt;/p&gt;
&lt;h1 id=&quot;Chrome-浏览器&quot;&gt;&lt;a href=&quot;#Chrome-浏览器&quot; class=&quot;headerlink&quot; title=&quot;Chrome 浏览器&quot;&gt;&lt;/a&gt;Chrome 浏览器&lt;/h1&gt;&lt;p&gt;无论是用户体验、强大的功能还是丰富的扩展程序都完爆国内的各种浏览器好不好。目前已经可以在不翻墙的情况下去 &lt;a href=&quot;http://www.google.cn/chrome/browser/desktop/index.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;下载 Chrome（桌面版）&lt;/a&gt;了，账号数据同步方面也不需要翻墙了。&lt;/p&gt;
    
    </summary>
    
      <category term="科学上网" scheme="http://yoursite.com/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
    
      <category term="chrome" scheme="http://yoursite.com/tags/chrome/"/>
    
  </entry>
  
  <entry>
    <title>CSS入门</title>
    <link href="http://yoursite.com/2018/11/05/CSS%E5%85%A5%E9%97%A8/"/>
    <id>http://yoursite.com/2018/11/05/CSS入门/</id>
    <published>2018-11-05T11:41:12.000Z</published>
    <updated>2018-11-23T06:07:13.201Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-CSS的全称是什么"><a href="#1-CSS的全称是什么" class="headerlink" title="1.CSS的全称是什么?"></a>1.CSS的全称是什么?</h2><p>CSS 指层叠样式表（Cascading Style Sheets）。通过CSS和HTML的结合可以实现表现与结构分离。从而提升工作效率，降低维护难度。</p><a id="more"></a><h2 id="2-CSS有几种引入方式-link-和-import-有什么区别"><a href="#2-CSS有几种引入方式-link-和-import-有什么区别" class="headerlink" title="2.CSS有几种引入方式? link 和@import 有什么区别?"></a>2.CSS有几种引入方式? link 和@import 有什么区别?</h2><p>css有四种引入方式：</p><p>1.内联方式</p><p>内联方式指的是直接在 HTML 标签中的 style 属性中添加 CSS。<br> <code><div style="background: red"></div></code><br> 这通常是个很糟糕的书写方式，它只能改变当前标签的样式，如果想要多个 <div> 拥有相同的样式，你不得不重复地为每个 <div> 添加相同的样式，如果想要修改一种样式，又不得不修改所有的 style 中的代码。很显然，内联方式引入 CSS 代码会导致 HTML 代码变得冗长，且使得网页难以维护。</div></div></p><p>2.嵌入方式</p><p>嵌入方式指的是在 HTML 头部中的 <style> 标签下书写 CSS 代码。</p><p><code><head></p><style>.content {background: red;}</style></p><p></p><p></p><p>嵌入方式的 CSS 只对当前的网页有效。因为 CSS 代码是在 HTML 文件中，所以会使得代码比较集中，当我们写模板网页时这通常比较有利。因为查看模板代码的人可以一目了然地查看 HTML 结构和 CSS 样式。因为嵌入的 CSS 只对当前页面有效，所以当多个页面需要引入相同的 CSS 代码时，这样写会导致代码冗余，也不利于维护。</p><p>3.链接方式</p><p>链接方式指的是使用 HTML 头部的 <head><meta name="generator" content="Hexo 3.8.0"> 标签引入外部的 CSS 文件。</head></p><p><code>    <link rel="stylesheet" type="text/css" href="style.css"></code></p><p>这是最常见的也是最推荐的引入 CSS 的方式。使用这种方式，所有的 CSS 代码只存在于单独的 CSS 文件中，所以具有良好的可维护性。并且所有的 CSS 代码只存在于 CSS 文件中，CSS 文件会在第一次加载时引入，以后切换页面时只需加载 HTML 文件即可。</p><p>4.导入方式</p><p>导入方式指的是使用 CSS 规则引入外部 CSS 文件。<br> <code> @import url(style.css);</code></p><p>link和@import两者都是外部引用CSS的方式，但是存在一定的区别：</p><p>区别1：link是XHTML标签，除了加载CSS外，还可以定义RSS等其他事务；@import属于CSS范畴，只能加载CSS。<br> 　区别2：link引用CSS时，在页面载入时同时加载；@import需要页面网页完全载入以后加载<br> 　区别3：link是XHTML标签，无兼容问题；@import是在CSS2.1提出的，低版本的浏览器不支持。<br> 区别4：ink支持使用Javascript控制DOM去改变样式；而@import不支持。</p><h2 id="3-以下这几种文件路径分别用在什么地方，代表什么意思"><a href="#3-以下这几种文件路径分别用在什么地方，代表什么意思" class="headerlink" title="3.以下这几种文件路径分别用在什么地方，代表什么意思?"></a>3.以下这几种文件路径分别用在什么地方，代表什么意思?</h2><p><img src="https:////upload-images.jianshu.io/upload_images/4769817-91e9b8c5b0b3d9e3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp" alt="img"></p><p>Paste_Image.png</p><h2 id="4-如果我想在js-jirengu-com上展示一个图片，需要怎么操作"><a href="#4-如果我想在js-jirengu-com上展示一个图片，需要怎么操作" class="headerlink" title="4.如果我想在js.jirengu.com上展示一个图片，需要怎么操作?"></a>4.如果我想在js.jirengu.com上展示一个图片，需要怎么操作?</h2><p>可以直接将图片上传到服务器，在页面使用这张图片；或者将图片存在本地服务器，然后打开本地服务，然后在网站上上引用图片</p><p>如果这个图片本来就存在网络上其他的服务器上，可以直接使用图片的网络路径链接的方式在页面上添加url引用这张图片，说白了就是把图片的引用地址改成网络路径就行了。</p><h2 id="5-列出5条以上html和-css-的书写规范"><a href="#5-列出5条以上html和-css-的书写规范" class="headerlink" title="5.列出5条以上html和 css 的书写规范"></a>5.列出5条以上html和 css 的书写规范</h2><p>1.统一使用小写<br> 2.不使用内联的style属性定义样式<br> 3.id和class语义化，分隔符建议使用-<br> 4.有可能就用缩写<br> 5.属性值是0，省略单位，比如不要写成0px，直接是0<br> 6.块内容缩进<br> 7.禁止 img的 src取值为空。延迟加载的图片也要增加默认的 src</p><h2 id="6-介绍-Chrome-开发者工具的功能区"><a href="#6-介绍-Chrome-开发者工具的功能区" class="headerlink" title="6.介绍 Chrome 开发者工具的功能区"></a>6.介绍 Chrome 开发者工具的功能区</h2><p><img src="https:////upload-images.jianshu.io/upload_images/4769817-2c28e0a74cbb020a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp" alt="img"></p><p>333.png</p><p>1是元素区，在这可以看到整个网页的结构<br> 2和12 都是控制台，录开发者开发过程中的日志信息，且可以作为与JS进行交互的命令行Shell<br> 3 是资源，这里可以看到各种你引入的js，主要就是用于调试js<br> 4 从发起网页页面请求Request后分析HTTP请求后得到的各个请求资源信息（包括状态、资源类型、大小、所用时间等），可以根据这个进行网络性能优化<br> 5.时间线记录并分析在网站的生命周期内所发生的各类事件，以此可以提高网页的运行时间的性能。<br> 6.记录JS CPU执行时间细节、显示JS对象和相关的DOM节点的内存消耗、记录内存的分配细节。</p><p>7.记录网站加载的所有资源信息，包括存储数据（Local Storage、Session Storage、IndexedDB、Web SQL、Cookies）、缓存数据、字体、图片、脚本、样式表</p><p>8.安全：判断当前网页是否安全<br> 9.对当前网页进行网络利用情况、网页性能方面的诊断，并给出一些优化建议。比如列出所有没有用到的CSS文件等</p><p>10.样式区域，可以直观的看到css<br> 11.适配区域，可以适配各种屏幕大小，一般用于调试页面自适应。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-CSS的全称是什么&quot;&gt;&lt;a href=&quot;#1-CSS的全称是什么&quot; class=&quot;headerlink&quot; title=&quot;1.CSS的全称是什么?&quot;&gt;&lt;/a&gt;1.CSS的全称是什么?&lt;/h2&gt;&lt;p&gt;CSS 指层叠样式表（Cascading Style Sheets）。通过CSS和HTML的结合可以实现表现与结构分离。从而提升工作效率，降低维护难度。&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="css" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/css/"/>
    
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>浅谈HTML（三）：表单元素</title>
    <link href="http://yoursite.com/2018/11/04/%E6%B5%85%E8%B0%88HTML%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E8%A1%A8%E5%8D%95%E5%85%83%E7%B4%A0/"/>
    <id>http://yoursite.com/2018/11/04/浅谈HTML（三）：表单元素/</id>
    <published>2018-11-04T03:20:06.000Z</published>
    <updated>2018-11-26T05:36:36.337Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、实践"><a href="#一、实践" class="headerlink" title="一、实践"></a>一、实践</h1><h3 id="1、贴上完整的代码图："><a href="#1、贴上完整的代码图：" class="headerlink" title="1、贴上完整的代码图："></a>1、贴上完整的代码图：</h3><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action=&quot;/a123&quot; method=&quot;get&quot;&gt;</span><br><span class="line">&lt;div class=&quot;username&quot;&gt;</span><br><span class="line">&lt;label for=&quot;username&quot;&gt;姓名&lt;/label&gt;</span><br><span class="line">&lt;input id=&quot;username&quot; type=&quot;text&quot; name=&quot;username1&quot; placeholder=&quot;用户名&quot;&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;password&quot;&gt;</span><br><span class="line">&lt;label for=&quot;password&quot;&gt;密码&lt;/label&gt;</span><br><span class="line">&lt;input id=&quot;password&quot; type=&quot;password&quot; name=&quot;password1&quot;&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;sex&quot;&gt;</span><br><span class="line">&lt;label for=&quot;sex&quot;&gt;性别&lt;/label&gt;</span><br><span class="line">&lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;male&quot;&gt;男</span><br><span class="line">&lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;female&quot;&gt;女</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;hobby&quot;&gt;</span><br><span class="line">&lt;label&gt;爱好&lt;/label&gt;</span><br><span class="line">&lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;wangzhe&quot;&gt;王者荣耀</span><br><span class="line">&lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;travl&quot;&gt;旅游</span><br><span class="line">&lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;pet&quot;&gt;宠物</span><br><span class="line">&lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;music&quot;&gt;音乐</span><br><span class="line">&lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;running&quot;&gt;跑步</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;textarea&quot;&gt;</span><br><span class="line">&lt;label for=&quot;textarea&quot;&gt;评论&lt;/label&gt;</span><br><span class="line">&lt;textarea name=&quot;article&quot;&gt;</span><br><span class="line">哈哈哈哈</span><br><span class="line">&lt;/textarea&gt;</span><br><span class="line">&lt;input type=&quot;hidden&quot; name=&quot;abcd&quot; value=&quot;12345&quot;&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;file&quot;&gt;</span><br><span class="line">&lt;input type=&quot;file&quot; name=&quot;myfile&quot; accept=&quot;image/png&quot;&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;choose&quot;&gt;</span><br><span class="line">&lt;label for=&quot;pet&quot;&gt;我的宠物&lt;/label&gt;</span><br><span class="line">&lt;select name=&quot;city&quot;&gt;</span><br><span class="line">&lt;option value=&quot;cat&quot;&gt;猫&lt;/option&gt;</span><br><span class="line">&lt;option value=&quot;dog&quot; selected&gt;狗&lt;/option&gt;</span><br><span class="line">&lt;option value=&quot;fish&quot;&gt;鱼&lt;/option&gt;</span><br><span class="line">&lt;/select&gt;</span><br><span class="line">&lt;button&gt;提交&lt;/button&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="2、效果图："><a href="#2、效果图：" class="headerlink" title="2、效果图："></a>2、效果图：</h3><p><img src="https://i.loli.net/2018/11/26/5bfb85aa6c48d.png" alt="TIM图片20181126131955.png"><br><img src="https://i.loli.net/2018/11/26/5bfb85ab1422c.png" alt="TIM图片20181126132012.png"></p><h1 id="二、具体标签："><a href="#二、具体标签：" class="headerlink" title="二、具体标签："></a>二、具体标签：</h1><h4 id="1、form"><a href="#1、form" class="headerlink" title="1、form"></a>1、<code>form</code></h4><p>代码结构如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=&quot;/a123&quot; method=&quot;get&quot;&gt;</span><br></pre></td></tr></table></figure><p><code>form</code>标签是表单的外壳，有4个主要属性：</p><p>（1）<code>action</code>：表单提交的地址</p><p>（2）<code>method</code>：提交表单的方法</p><p>（3）<code>target</code>：在何处打开action</p><p>（4）<code>enctype</code>：</p><ul><li><code>application</code>／<code>x-www-form-urlencoded</code>：在发送前编码所有字符（默认）</li><li><code>text</code>／<code>plain</code>：空格转换为“+”加号，但不对特殊字符编码</li><li><code>multipart</code>／<code>form-data</code>：使用包含文件上传控件的表单是，必须使用该值</li></ul><h3 id="2、type"><a href="#2、type" class="headerlink" title="2、type"></a>2、<code>type</code></h3><p>代码结构如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;text&quot; name=&quot;sex&quot;&gt;</span><br></pre></td></tr></table></figure><p>（1）<code>type=&quot;text&quot;</code><br>普通的文本输入框，单行输入（不行回车换行）。可输入文字展示</p><p>（2）<code>type=&quot;password&quot;</code><br>输入密码是以圆点展示，不被人知道</p><p>（3）<code>type=&quot;checkbox&quot;</code></p><p>呈现带有阴影的勾选方框<br>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;hobby&quot;&gt;</span><br><span class="line">&lt;label for=&quot;hobby&quot;&gt;爱好&lt;/label&gt;</span><br><span class="line">&lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;read&quot;&gt;读书</span><br><span class="line">&lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;music&quot;&gt;听歌</span><br><span class="line">&lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;swim&quot;&gt;游泳</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>如图：<br><a href="https://user-gold-cdn.xitu.io/2018/8/14/165376da540aa9a7?w=600&amp;h=227&amp;f=jpeg&amp;s=21173" target="_blank" rel="noopener"><img src="https://user-gold-cdn.xitu.io/2018/8/14/165376da540aa9a7?w=600&amp;h=227&amp;f=jpeg&amp;s=21173" alt="img"></a></p><p>注：</p><p>A、如果是分组，name写成不同，表示多选，如针对hobby这个关键字的搜索，value值需要设置，否则后台提交的用户信息将显示为on（无信息展示）。</p><p>B、value的作用：让后台来识别该字段的信息</p><p>（4）<code>type=&quot;radio&quot;</code></p><p>呈现带有阴影的点选圆框<br>代码结构如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;hobby&quot;&gt;</span><br><span class="line">&lt;label for=&quot;sex&quot;&gt;性别&lt;/label&gt;</span><br><span class="line">&lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;male&quot;&gt;男</span><br><span class="line">&lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;female&quot;&gt;女</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>图：<br><a href="https://user-gold-cdn.xitu.io/2018/8/14/165376da5417dd0b?w=600&amp;h=229&amp;f=jpeg&amp;s=16326" target="_blank" rel="noopener"><img src="https://user-gold-cdn.xitu.io/2018/8/14/165376da5417dd0b?w=600&amp;h=229&amp;f=jpeg&amp;s=16326" alt="image"></a></p><p>注：<br><code>radio</code> 如何分组？举例说明，只需要在<code>&lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;男&quot;&gt;</code><br>中的name值设置另一个意义值，就可以分组显示，如：</p><p><strong>第1组：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;男&quot;&gt;男</span><br><span class="line">&lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;女&quot;&gt;女</span><br></pre></td></tr></table></figure><p><strong>第2组：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;radio&quot; name=&quot;sex1&quot; value=&quot;男&quot;&gt;男</span><br><span class="line">&lt;input type=&quot;radio&quot; name=&quot;sex1&quot; value=&quot;女&quot;&gt;女</span><br></pre></td></tr></table></figure><p>即：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;hobby&quot;&gt;</span><br><span class="line">&lt;label for=&quot;sex&quot;&gt;性别&lt;/label&gt;</span><br><span class="line">&lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;male&quot;&gt;男</span><br><span class="line">&lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;female&quot;&gt;女</span><br><span class="line">&lt;input type=&quot;radio&quot; name=&quot;sex1&quot;  value=&quot;男&quot;&gt;男</span><br><span class="line">&lt;input type=&quot;radio&quot; name=&quot;sex1&quot;  value=&quot;女&quot;&gt;女</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>如图：<br><a href="https://user-gold-cdn.xitu.io/2018/8/14/165376da541c0e1d?w=600&amp;h=221&amp;f=jpeg&amp;s=18448" target="_blank" rel="noopener"><img src="https://user-gold-cdn.xitu.io/2018/8/14/165376da541c0e1d?w=600&amp;h=221&amp;f=jpeg&amp;s=18448" alt="image"></a></p><p>（5）<code>type=&quot;file&quot;</code></p><p>用于文件上传，呈现“选择文件”按钮，点击即可上传文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;file&quot; name=&quot;myfile&quot;  accept=&quot;image/png，image/jp&gt;</span><br></pre></td></tr></table></figure><p><strong>注：</strong> accept该参数使用，即用于接收所限制的文件格式</p><p>（6）<code>type=&quot;hidden&quot;</code><br>作用：</p><ul><li><p><strong>暂存信息。</strong> 如在<code>type=&quot;hidden&quot;</code>埋下一个值，后台定位获取相应的值，可安全存值，用户什么都看不见，只能在后台看到；</p></li><li><p>保障安全。</p></li></ul><p>  当打开一个页面，实际上该页面是后端写的模板并在里面填充数据，填充好数据后，安全策略时使用</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">type=&quot;hidden&quot;</span><br></pre></td></tr></table></figure><p>  ，即：</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;hidden&quot; name=&quot;abc&quot;  value=&quot;123456&quot;&gt;</span><br></pre></td></tr></table></figure><p>当用户提交用户信息至后台，同时该安全点<code>type=&quot;hidden&quot;</code>的值也会提交后台，后台进行校验——确认过安全，相当于埋在后台与用户信息相匹配的一个安全校验值，即该用户为一个合法用户。</p><p>（7）<code>type=&quot;button&quot;</code>，不能点击提交</p><p>（8）<code>type=&quot;submit&quot;</code>，可以点击提交</p><p>（9）<code>type=&quot;reset&quot;</code>，用于清空所有用户信息</p><p><strong>注：</strong></p><p>A、以下<code>input</code>有何作用？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input  type=&quot;submit&quot; value=&quot;提交&quot; name=&quot;提交按钮&quot;&gt;</span><br></pre></td></tr></table></figure><p>B、<code>type=&quot;submit&quot;</code> ，</p><p>提示input作用为“提交”按钮</p><p>C、<code>value=&quot;提交&quot;</code>，</p><p>显示提交作用，意义在于“点击提交”的交互作用</p><p>D、<code>input</code>里name 作用？</p><p>即用于传递数据给后台都形成有意义的识别值，如用value和name赋值，如果不写的话，该输入标签将不会有任何意义，就等于无实际操作表单的意义。</p><h3 id="3、type-hidden隐藏域作用"><a href="#3、type-hidden隐藏域作用" class="headerlink" title="3、type=hidden隐藏域作用"></a>3、<code>type=hidden</code>隐藏域作用</h3><p><strong>type=hidden隐藏域</strong>，作为校验该用户信息的一个隐藏值（判断标准）。当用户打开页面后是看不见type=hidden相应的值，填写用户信息之后点击提交时，用户信息的数据（包括type=hidden值）随即提交后台，打开后台则会展示代码<code>type=hidden</code>所写的相应元素属性值。后台校验<code>type=hidden</code>相应值如果是正确，即用户提交为安全。</p><p><strong>埋点</strong>（保护的参数）——浏览器提交后台有该参数作为校验标准参考——若显示错值或无值，服务器也将不承认所提交的数据；若为正确值，则说明该用户获取权限，即为合法用户，可防止CSRF攻击</p><h3 id="4、label"><a href="#4、label" class="headerlink" title="4、label"></a>4、<code>label</code></h3><p>输入框前的文字标注<br>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;username&quot;&gt;</span><br><span class="line">&lt;label for=&quot;username&quot;&gt;姓名&lt;/label&gt;</span><br><span class="line">&lt;input id=&quot;username&quot; type=&quot;text&quot; name=&quot;username1&quot;&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>注：<br>for，用于点击文字或输入框时，是文字显示一种focus状态，可直接输入对应信息</p><h3 id="5、select"><a href="#5、select" class="headerlink" title="5、select"></a>5、<code>select</code></h3><p>下拉菜单<br>代码结构如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;choose&quot;&gt;</span><br><span class="line">&lt;select name=&quot;city&quot;&gt;</span><br><span class="line">&lt;label for=&quot;pet&quot;&gt;我的宠物&lt;/label&gt;</span><br><span class="line">&lt;option value=&quot;cat&quot;&gt;猫&lt;/option&gt;</span><br><span class="line">&lt;option value=&quot;dog&quot;&gt;狗&lt;/option&gt;</span><br><span class="line">&lt;option value=&quot;fish&quot;&gt;鱼&lt;/option&gt;</span><br><span class="line">&lt;/select&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>option中，设置默认选择的初始值，即 <code>&lt;option value=&quot;cat&quot; selected&gt;猫&lt;/option&gt;</code></p><h3 id="6、extarea"><a href="#6、extarea" class="headerlink" title="6、extarea"></a>6、<code>extarea</code></h3><p>实现多行文本，展示较大的输入框。即常见的评论框。<br>代码结构如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;textarea&quot;&gt;</span><br><span class="line">&lt;label for=&quot;textarea&quot;&gt;评论&lt;/label&gt;</span><br><span class="line">&lt;textarea name=&quot;article&quot;&gt;</span><br><span class="line">123</span><br><span class="line">&lt;/textarea&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>注：<br>若在<code>&lt;textarea&gt;...&lt;/textarea&gt;</code>中输入任意值，即相当于value赋值的意义，也就是说在<code>&lt;textarea&gt;...&lt;/textarea&gt;</code>输入的值都能显示其输出的意义。</p><h3 id="7、placeholder"><a href="#7、placeholder" class="headerlink" title="7、placeholder"></a>7、<code>placeholder</code></h3><p>用于输入什么用户信息的提示<br>代码结构如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;username&quot;&gt;</span><br><span class="line">&lt;label for=&quot;username&quot;&gt;姓名&lt;/label&gt;</span><br><span class="line">&lt;input id=&quot;username&quot; type=&quot;text&quot; name=&quot;username1&quot; placeholder=&quot;用户名&quot;&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>图：<br><img src="https://i.loli.net/2018/11/26/5bfb85ab1ed15.png" alt="TIM图片20181126132018.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一、实践&quot;&gt;&lt;a href=&quot;#一、实践&quot; class=&quot;headerlink&quot; title=&quot;一、实践&quot;&gt;&lt;/a&gt;一、实践&lt;/h1&gt;&lt;h3 id=&quot;1、贴上完整的代码图：&quot;&gt;&lt;a href=&quot;#1、贴上完整的代码图：&quot; class=&quot;headerlink&quot; title=&quot;1、贴上完整的代码图：&quot;&gt;&lt;/a&gt;1、贴上完整的代码图：&lt;/h3&gt;
    
    </summary>
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="html" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/html/"/>
    
    
      <category term="html" scheme="http://yoursite.com/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>浅谈HTML（二）：表单提交原理</title>
    <link href="http://yoursite.com/2018/11/03/%E6%B5%85%E8%B0%88HTML%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E8%A1%A8%E5%8D%95%E6%8F%90%E4%BA%A4%E5%8E%9F%E7%90%86/"/>
    <id>http://yoursite.com/2018/11/03/浅谈HTML（二）：表单提交原理/</id>
    <published>2018-11-03T07:19:52.000Z</published>
    <updated>2018-11-26T03:47:33.093Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、html表单"><a href="#一、html表单" class="headerlink" title="一、html表单"></a>一、html表单</h1><h3 id="1、什么是表单"><a href="#1、什么是表单" class="headerlink" title="1、什么是表单"></a>1、什么是表单</h3><p>能够去输入用户信息的一个单子。和我们平时填写的纸质表单一样，在HTML页面上，也有表单是用于搜集不同类型的用户信息输入。<br><a id="more"></a></p><h3 id="2、作用"><a href="#2、作用" class="headerlink" title="2、作用"></a>2、作用</h3><p>用于收集已收集的信息，提交你网站的后台（或者服务器）。<br>HTML表单是一个包含表单元素的区域，表单元素是允许用户在表单中（表单元素包含如：文本域、下拉列表、单选框、复选框等）输入信息的元素。</p><hr><h1 id="二、写表单"><a href="#二、写表单" class="headerlink" title="二、写表单"></a>二、写表单</h1><h3 id="1、表单提交原理"><a href="#1、表单提交原理" class="headerlink" title="1、表单提交原理"></a>1、表单提交原理</h3><p>一般表单有登录名、密码，form、input，表单所有信息用form元素包裹。用包裹所有input元素输入框，当点击提交后，将会把form所包裹得所有input输入框的信息提交给后台的一个地址上。</p><h3 id="2、写表单"><a href="#2、写表单" class="headerlink" title="2、写表单"></a>2、写表单</h3><p>（1）表单内的主要标签属性：<br>A、<code>&lt;form&gt;...&lt;/form&gt;</code><br>B、<code>&lt;form action=&quot;/a123&quot; method=&quot;get&quot;&gt;</code></p><ul><li><code>action</code> : 把数据提交到后台的地址，如<code>action=&quot;/a123&quot;</code>，即提交到当前域名下的<code>/a123</code></li><li><code>method</code>：提交数据的方式</li></ul><p>（2）demo：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div class=&quot;login&quot;&gt;</span><br><span class="line">&lt;form action=&quot;/a123&quot; method=&quot;get&quot;&gt;</span><br><span class="line">&lt;div class=&quot;sex&quot;&gt;</span><br><span class="line">&lt;input type=&quot;text&quot; name=&quot;sex1&quot;&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;username&quot;&gt;</span><br><span class="line">&lt;input type=&quot;text&quot; name=&quot;username1&quot;&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;password&quot;&gt;</span><br><span class="line">&lt;input type=&quot;password&quot; name=&quot;password1&quot;&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;submit&quot;&gt;</span><br><span class="line">&lt;button&gt;提交&lt;/button&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>（3）html文件用浏览器打开页面<br>当写出登录名、密码、提交代码后（之后加上性别），<br><img src="https://i.loli.net/2018/11/26/5bfb65f82571f.png" alt="TIM图片20181126111222.png"><br>以get形式点击提交，页面url显示input输入的相应的内容：</p><blockquote><p>注：点击提交代表向服务器发送了一个请求，这个文件是通过get方式进行表单收集</p></blockquote><p><img src="https://i.loli.net/2018/11/26/5bfb65f84635d.png" alt="TIM图片20181126111237.png"><br>假如，将以下代码放置在<code>&lt;form&gt;&lt;/form&gt;</code>标签之外，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">&lt;div class=&quot;sex&quot;&gt;</span><br><span class="line">&lt;input type=&quot;text&quot; name=&quot;sex1&quot;&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;form&gt;</span><br><span class="line">.....</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>以get形式提交的页面url也不会显示相应的内容：<br><img src="https://i.loli.net/2018/11/26/5bfb65f94698f.png" alt="TIM图片20181126111242.png"></p><h3 id="3、终端上操作"><a href="#3、终端上操作" class="headerlink" title="3、终端上操作"></a>3、终端上操作</h3><p>即本地终端开启服务器，以服务端的方式打开页面<br>（1）命令行开启静态服务器，并打开页面：<br>因为之前我已经安装nodejs，用npm安装了http-server这个服务器，所以可以执行以下代码直接打开这个静态服务器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ http-server</span><br></pre></td></tr></table></figure><p>代码执行之后，输入相应的url出现的页面，两步骤之后的示意图：<br><img src="https://i.loli.net/2018/11/26/5bfb65f964a00.png" alt="TIM图片20181126111259.png"><br>注：以下情况给没有安装nodejs 的人看的（安装了就可以不看）</p><p>假如有人之前没安装nodejs，就不能用npm命令去开启一个静态服务器，所以可以先看看我这篇：<br><a href="https://neil94n.github.io/2018/11/02/%E6%B5%85%E8%B0%88%E5%91%BD%E4%BB%A4%E8%A1%8C%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E5%AE%89%E8%A3%85%E9%9D%99%E6%80%81%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88%E6%B6%89%E5%8F%8Anodejs%E5%92%8Cnpm%E7%9A%84%E4%BD%BF%E7%94%A8%EF%BC%89/" target="_blank" rel="noopener">浅谈命令行（二）：安装静态服务器（涉及nodejs和npm的使用）</a><br>​<br>看完之后可以下载nodejs，在终端执行以下代码：<br><code>​​$ sudo npm install -g http-server</code><br><code>$ http-server</code><br>这样之后就开启了一个静态服务器，就可以用里面的url打开相应的html文件<br>​<br>（2）输入相应信息之后，出现：<br><img src="https://i.loli.net/2018/11/26/5bfb65fa31b5b.png" alt="TIM图片20181126111304.png"><br>​<br>（3）页面右键——检查，重新输入表单信息，点击提交<br>出现页面相对应的html文件——demo.html的请求，先贴上我操作后出现的页面：<br><img src="https://i.loli.net/2018/11/26/5bfb65fa8665b.png" alt="TIM图片20181126111310.png"><br><img src="https://i.loli.net/2018/11/26/5bfb65feadbf9.jpg" alt="TIM图片20181126111315.jpg"><br><img src="https://i.loli.net/2018/11/26/5bfb65fec3dcb.jpg" alt="TIM图片20181126111335.jpg"><br>​</p><ul><li><p>请求的地址：<br><code>http://127.0.0.1:8080/a123?username1=neil&amp;password1=123456</code></p></li><li><p>请求的类型：<br><code>Request Method: GET</code></p></li><li>请求的参数：<br><code>username1: neil</code><br><code>password1: 123456</code><br>​<br>（4）两种请求类型：get和post<br>A、<strong>get请求</strong><br>即当demo.html中<code>method=&quot;get&quot;</code>时，页面上点击“提交”时，就会将demo.html展现的信息进行组装，以view的形式去组合成这个url地址：<code>http://127.0.0.1:8080/a123?username1=neil&amp;password1=123456</code>，向这个地址发送请求。<br>​<br>get请求，本质上就是url的拼接，把你的参数拼接在一起组成一个新的url:<br><img src="https://i.loli.net/2018/11/26/5bfb6a47d9334.png" alt="TIM图片20181126113521.png">标签中的name属性<br>​<br>B、<strong>post请求</strong><br>关于post类型发送请求：由于我的服务器http-server，是个静态文件服务器，不支持post请求。<br>可以看老司机的演示：<br><a href="https://user-gold-cdn.xitu.io/2018/8/14/165376a8f7ef9a13?w=600&amp;h=346&amp;f=jpeg&amp;s=27378" target="_blank" rel="noopener"><img src="https://user-gold-cdn.xitu.io/2018/8/14/165376a8f7ef9a13?w=600&amp;h=346&amp;f=jpeg&amp;s=27378" alt="image"></a></li></ul><p><strong>post的请求类型得到的url地址更干净，更安全。</strong><br>​<br>​</p><h1 id="三、post和get的区别"><a href="#三、post和get的区别" class="headerlink" title="三、post和get的区别"></a>三、post和get的区别</h1><h3 id="1、method提供两种提交方式："><a href="#1、method提供两种提交方式：" class="headerlink" title="1、method提供两种提交方式："></a>1、method提供两种提交方式：</h3><p>一种是get方式向后台发送请求，提交数据；另一种是post方式向后台发送请求，提交数据</p><h3 id="2、区别"><a href="#2、区别" class="headerlink" title="2、区别"></a>2、区别</h3><p>（1）从安全性上，二者表象不同，get把提交的数据url可以看到，会展现在浏览器历史记录中，安全性不好；但是post看不到，安全性好。<br>​<br>（2）从提交数据量上，get最多提交1k数据，浏览器上的url地址框有字符长度限制；post理论上无限制，受服务器限制。<br>​<br>（3）从原理上，get 是拼接 url，post是放入http 请求体中。</p><h3 id="3、应用场景（怎么合理两种方式传递数据？）"><a href="#3、应用场景（怎么合理两种方式传递数据？）" class="headerlink" title="3、应用场景（怎么合理两种方式传递数据？）"></a>3、应用场景（怎么合理两种方式传递数据？）</h3><p><strong>注：</strong> 在实际应用上，get 重在 “得到”, post 重在”传递”<br>​<br>​即假如向后台查询一篇论文，请求数据，请求为“得到”，用get方式请求数据；向后台“传递”数据，写了文章之后传递至后台，通常是“传递完成”的状态进行提示，用post方式请求数据。<br>​<br>​</p><h1 id="四、表单元素"><a href="#四、表单元素" class="headerlink" title="四、表单元素"></a>四、表单元素</h1><p>普通用户点上面一个，能FQ的点第二个，轻戳：<br><a href="http://www.w3school.com.cn/html/html_form_elements.asp" target="_blank" rel="noopener">HTML 表单元素</a><br><a href="https://developer.mozilla.org/zh-CN/docs/Learn/HTML/Forms" target="_blank" rel="noopener">HTML 表单指南</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一、html表单&quot;&gt;&lt;a href=&quot;#一、html表单&quot; class=&quot;headerlink&quot; title=&quot;一、html表单&quot;&gt;&lt;/a&gt;一、html表单&lt;/h1&gt;&lt;h3 id=&quot;1、什么是表单&quot;&gt;&lt;a href=&quot;#1、什么是表单&quot; class=&quot;headerlink&quot; title=&quot;1、什么是表单&quot;&gt;&lt;/a&gt;1、什么是表单&lt;/h3&gt;&lt;p&gt;能够去输入用户信息的一个单子。和我们平时填写的纸质表单一样，在HTML页面上，也有表单是用于搜集不同类型的用户信息输入。&lt;br&gt;
    
    </summary>
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="html" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/html/"/>
    
    
      <category term="html" scheme="http://yoursite.com/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>浅谈HTML（一）：部分标签</title>
    <link href="http://yoursite.com/2018/11/03/%E6%B5%85%E8%B0%88HTML%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E9%83%A8%E5%88%86%E6%A0%87%E7%AD%BE/"/>
    <id>http://yoursite.com/2018/11/03/浅谈HTML（一）：部分标签/</id>
    <published>2018-11-03T00:40:04.000Z</published>
    <updated>2018-11-26T03:49:24.660Z</updated>
    
    <content type="html"><![CDATA[<p> <strong>本文主要讲述以下内容：</strong></p><ul><li><code>&lt;iframe&gt;</code></li><li><code>&lt;a&gt;</code>及伪协议</li><li><code>&lt;form&gt;</code></li><li><code>&lt;input&gt;</code></li><li><code>&lt;table&gt;</code> 及 <code>&lt;colgroup&gt;</code></li><li>可替换元素</li><li>空元素</li><li>其他<a id="more"></a><h2 id="一-iframe"><a href="#一-iframe" class="headerlink" title="一.iframe"></a><strong>一.iframe</strong></h2></li></ul><p>iframe 标签 用于嵌套页面,新开一个窗口（沙箱隔离，引用第三方内容）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">src指定：&lt;iframe src=&quot;[https://www.baidu.com](http://link.zhihu.com/?target=https%3A//www.baidu.com/)&quot; name=&quot;xxx&quot;&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure></p><p>链接打开：</p><iframe src="#" name="xxx" frameborder="0"></iframe><p><a target="xxx" href="http://qq.com">QQ</a></p><p><a target="xxx" href="http://baidu.com">baidu</a></p><p>iframe可用于所见即所得的网页编辑器。</p><h2 id="二-a-anchor-伪协议"><a href="#二-a-anchor-伪协议" class="headerlink" title="二. a (anchor) , 伪协议"></a><strong>二. a (anchor) , 伪协议</strong></h2><ul><li><code>&lt;a&gt;</code>用于http get 请求</li><li>属性download 下载链接指定文件</li><li><a href="http://link.zhihu.com/?target=https%3A//developer.mozilla.org/zh-CN/docs/Web/HTML/Element/a%23%25E7%25A4%25BA%25E4%25BE%258B" target="_blank" rel="noopener"><a></a>查看使用<code>&lt;a&gt;</code>来创建可点击图片，如何创建email链接，电话链接</a></li><li><code>&lt;a&gt;</code>的示范:</li></ul><p><code>&lt;a href=&quot;qq.com&quot;&gt;qq&lt;/a&gt;</code>错误示范，表示qq.com文件</p><p><code>&lt;a href=&quot;//qq.com&quot;&gt;qq&lt;/a&gt;</code></p><ul><li><ul><li>浏览器会根据当前协议，补全无协议链接的协议</li><li>如果用 file:// 协议浏览页面，就会访问到 file://<a href="http://link.zhihu.com/?target=http%3A//qq.com" target="_blank" rel="noopener">http://qq.com</a>，这是一个不存在的路径</li><li>应该尽量不使用 file:// 协议预览网页，以免无协议链接出错</li></ul></li></ul><p><a href="?name='li'">link</a> 浏览器发起 GET /?name=li HTTP/1.1 请求</p><p><a href="#xxx">anchor</a> 页面内跳转，</p><p>&lt;a href=”javascript:alert(“a”) &gt; 伪协议,</p><p><a href="javascript:;" target="_blank" rel="noopener"> 阻止页面跳转</a></p><p>伪协议：</p><ul><li><ul><li>可以在用户点击 a 时执行一段 javascript 代码</li><li>在地址栏输入 javascript:alert(1) 可以在当前页面执行一段代码</li><li>伪协议可以实现「点击之后没有任何动作的 a 标签」，满足一些奇葩需求</li></ul></li></ul><p><a href="#">滚回顶部</a></p><p><a href="">刷新页面</a></p><p><a href="/..">link</a> 浏览器发起 GET / HTTP/1.1 的请求</p><ul><li><p>target属性</p></li><li><ul><li>_self : 当前页面加载，即当前的响应到同一HTML 4 frame</li><li>_blank : 新窗口打开，即到一个新的未命名的HTML4窗口或HTML5浏览器上下文</li><li>_parent : 加载响应到当前框架的HTML4父框架或当前的HTML5浏览上下文的父浏览上下文。如果没有parent框架或者浏览上下文，此选项的行为方式相同_self。</li><li>_top : HTML4中：加载的响应成完整的，原来的窗口，取消所有其它frame。 HTML5中：加载响应进入顶层浏览上下文（即，浏览上下文，它是当前的一个的祖先，并且没有parent）。如果没有parent框架或者浏览上下文，此选项的行为方式相同_self</li></ul></li></ul><h2 id="三-form"><a href="#三-form" class="headerlink" title="三. form"></a><strong>三. form</strong></h2><p><form> 必须有提交按钮，一般作为post请求</form></p><p>get 默认会把参数放在查询参数里面</p><p>post默认会把参数放在请求header的第四部分里面</p><p>form 具有target属性：</p><blockquote><p>如果一个<form>里面只有一个<button>btn</button> ,他会自动升级为提交按钮<br>只有一个<button type="button">或者</button><input type="button"> 依然只是普通按钮<br>只有一个<input type="submit">可以提交，是唯一能确定form是否可以提交</form></p></blockquote><h2 id="四-input"><a href="#四-input" class="headerlink" title="四.input"></a><strong>四.input</strong></h2><p>如果 input 不加 name，那么在表单提交时，input 的值就不会出现在请求里,checkbox, radio 的 name表示一组。</p><p><code>&lt;label&gt;</code>把input包起来，可以关联，input</p><p>属性： require表示该表单必填 ，<a href="http://link.zhihu.com/?target=https%3A//developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Input%23%25E5%2585%25A8%25E5%25B1%2580_%253Cinput%253E_%25E5%25B1%259E%25E6%2580%25A7" target="_blank" rel="noopener">：输入（表单输入）元素</a></p><p>type部分类型：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">- submit / reset</span><br><span class="line">- range</span><br><span class="line">- search</span><br><span class="line">- data / datatime /datetime-local</span><br><span class="line">- image</span><br><span class="line">- file</span><br><span class="line">- email</span><br><span class="line">- hidden</span><br></pre></td></tr></table></figure></p><h2 id="五-lt-table-gt-及-lt-colgroup-gt"><a href="#五-lt-table-gt-及-lt-colgroup-gt" class="headerlink" title="五.&lt;table&gt; 及&lt;colgroup&gt;"></a><strong>五.<code>&lt;table&gt;</code> 及<code>&lt;colgroup&gt;</code></strong></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;table&gt;： thead tbody tfoot caption tr td/th</span><br><span class="line"></span><br><span class="line">&lt;colgroup&gt; : 定义表格内的一组列。</span><br></pre></td></tr></table></figure><p>示例:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;table border=1&gt;</span><br><span class="line"></span><br><span class="line">&lt;colgroup&gt;</span><br><span class="line"></span><br><span class="line">&lt;col width=100&gt;控制列宽</span><br><span class="line"></span><br><span class="line">&lt;col width=100&gt;......</span><br></pre></td></tr></table></figure><h2 id="六-可替换元素"><a href="#六-可替换元素" class="headerlink" title="六.可替换元素"></a><strong>六.可替换元素</strong></h2><p>CSS 里，可替换元素（replaced element）的展现不是由CSS来控制的。这些元素是一类 外观渲染独立于CSS的 外部对象。 典型的可替换元素有<code>&lt;img&gt;</code>、 <code>&lt;object&gt;</code>、 <code>&lt;video&gt;</code> 和 表单元素，如<code>&lt;textarea&gt;</code>、 <code>&lt;input&gt;</code> 。 某些元素只在一些特殊情况下表现为可替换元素，例如 <code>&lt;audio&gt;</code>和 <code>&lt;canvas&gt;</code>。 通过 CSS content 属性来插入的对象 被称作 匿名可替换元素（anonymous replaced elements）。</p><h2 id="七-空元素"><a href="#七-空元素" class="headerlink" title="七.空元素"></a><strong>七.空元素</strong></h2><p>空元素就是不用加闭合标签的标签，也可以叫闭元素。如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;area&gt;</span><br><span class="line">&lt;base&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;col&gt;</span><br><span class="line">&lt;colgroup&gt;</span><br><span class="line">&lt;command&gt;</span><br><span class="line">&lt;embed&gt;</span><br><span class="line">&lt;hr&gt;</span><br><span class="line">&lt;img&gt;</span><br><span class="line">&lt;input&gt;</span><br><span class="line">&lt;keygen&gt;</span><br><span class="line">&lt;link&gt;</span><br><span class="line">&lt;meta&gt;</span><br><span class="line">&lt;param&gt;</span><br><span class="line">&lt;source&gt;</span><br><span class="line">&lt;track&gt;</span><br><span class="line">&lt;wbr&gt;</span><br></pre></td></tr></table></figure></p><h2 id="八-其他"><a href="#八-其他" class="headerlink" title="八.其他"></a><strong>八.其他</strong></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;select&gt; 下拉列表，指定name！ multiple 多选</span><br><span class="line"></span><br><span class="line">&lt;textarea&gt; resize：none 禁止拖动</span><br><span class="line"></span><br><span class="line">&lt;aside&gt; 跟文章不相关的内容,旁边经常作为侧边栏或标注框出现</span><br><span class="line"></span><br><span class="line">全局属性contenteditable 内容可编辑</span><br><span class="line"></span><br><span class="line">除了div 和 span 其他标签都有默认样式</span><br><span class="line"></span><br><span class="line">&lt;b&gt; 与 &lt;strong&gt;的区别：&lt;strong&gt;元素表示更重要的内容，而&lt;b&gt;元素用于提醒，</span><br><span class="line"></span><br><span class="line">dl &gt; dt +dd</span><br><span class="line"></span><br><span class="line">&lt;meta charset=&quot;utf-8&quot;&gt; 等价于 &lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8&quot;&gt; :http-equiv:http 的等价物</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt; &lt;strong&gt;本文主要讲述以下内容：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;及伪协议&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; 及 &lt;code&gt;&amp;lt;colgroup&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;可替换元素&lt;/li&gt;
&lt;li&gt;空元素&lt;/li&gt;
&lt;li&gt;其他
    
    </summary>
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="html" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/html/"/>
    
    
      <category term="html" scheme="http://yoursite.com/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>浅谈命令行（三）：好玩的命令行操作</title>
    <link href="http://yoursite.com/2018/11/02/%E6%B5%85%E8%B0%88%E5%91%BD%E4%BB%A4%E8%A1%8C%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E5%A5%BD%E7%8E%A9%E7%9A%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%93%8D%E4%BD%9C%EF%BC%88%E6%9C%89%E5%A5%BD%E7%8E%A9%E5%86%8D%E8%A1%A5%E5%85%85%EF%BC%89/"/>
    <id>http://yoursite.com/2018/11/02/浅谈命令行（三）：好玩的命令行操作（有好玩再补充）/</id>
    <published>2018-11-02T06:03:27.000Z</published>
    <updated>2018-11-25T12:44:46.359Z</updated>
    
    <content type="html"><![CDATA[<p><strong>置顶资料：</strong><br><strong>用来练习命令行，一天一个命令行：</strong><br><a href="http://www.cnblogs.com/peida/tag/linux%E5%91%BD%E4%BB%A4/default.html?page=1" target="_blank" rel="noopener">一天一个命令行</a></p><a id="more"></a><h1 id="一、可以开启一个翻译工具"><a href="#一、可以开启一个翻译工具" class="headerlink" title="一、可以开启一个翻译工具"></a>一、可以开启一个翻译工具</h1><h3 id="第一步："><a href="#第一步：" class="headerlink" title="第一步："></a>第一步：</h3><p>打开终端或者 gitbash，输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g fanyi</span><br></pre></td></tr></table></figure><p>或<br>有些人的电脑有管理员权限的，需要前面加上sudo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo npm install -g fanyi</span><br></pre></td></tr></table></figure><p>这里还需要输入你的开机密码</p><h3 id="第二步："><a href="#第二步：" class="headerlink" title="第二步："></a>第二步：</h3><p>然后在终端下输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ fanyi 你好</span><br></pre></td></tr></table></figure><p>即可进行及时翻译<br><strong>附上我电脑的终端命令行操作图：</strong><br><img src="https://i.loli.net/2018/11/23/5bf7923901736.png" alt="QQ图片20181123133653.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;置顶资料：&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;用来练习命令行，一天一个命令行：&lt;/strong&gt;&lt;br&gt;&lt;a href=&quot;http://www.cnblogs.com/peida/tag/linux%E5%91%BD%E4%BB%A4/default.html?page=1&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;一天一个命令行&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="基础知识" scheme="http://yoursite.com/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
      <category term="命令行" scheme="http://yoursite.com/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%91%BD%E4%BB%A4%E8%A1%8C/"/>
    
    
      <category term="命令行" scheme="http://yoursite.com/tags/%E5%91%BD%E4%BB%A4%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>浅谈命令行（二）：安装静态服务器（涉及nodejs和npm的使用）</title>
    <link href="http://yoursite.com/2018/11/02/%E6%B5%85%E8%B0%88%E5%91%BD%E4%BB%A4%E8%A1%8C%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E5%AE%89%E8%A3%85%E9%9D%99%E6%80%81%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88%E6%B6%89%E5%8F%8Anodejs%E5%92%8Cnpm%E7%9A%84%E4%BD%BF%E7%94%A8%EF%BC%89/"/>
    <id>http://yoursite.com/2018/11/02/浅谈命令行（二）：安装静态服务器（涉及nodejs和npm的使用）/</id>
    <published>2018-11-02T01:50:06.000Z</published>
    <updated>2018-11-25T12:44:31.194Z</updated>
    
    <content type="html"><![CDATA[<p>掌握了终端的一些基本命令，可以做点什么呢？用命令行，可以安装一个静态服务器哦~<br><strong>关键词：</strong> Nodejs、npm、全局安装、http-server</p> <a id="more"></a><h1 id="一、安装Nodejs"><a href="#一、安装Nodejs" class="headerlink" title="一、安装Nodejs"></a>一、安装Nodejs</h1><h3 id="1、什么是Nodejs"><a href="#1、什么是Nodejs" class="headerlink" title="1、什么是Nodejs"></a>1、什么是Nodejs</h3><p>Node.js 是一个让 JavaScript 运行在服务端的开发平台。（不懂就算了，不用太在意，反正应该是帮助js更友好地去开发的一个开发平台。。。啊吧）</p><h3 id="2、下载链接：-nodejs"><a href="#2、下载链接：-nodejs" class="headerlink" title="2、下载链接： nodejs"></a>2、下载链接： <a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">nodejs</a></h3><p><strong>注：</strong> nodejs下载完后，你将不会看到它像其他软件那样出现在桌面，需要用命令行去调用它。</p><h3 id="3、验证是否安装成功"><a href="#3、验证是否安装成功" class="headerlink" title="3、验证是否安装成功"></a>3、验证是否安装成功</h3><p>此时，可以开启终端，用命令行验证：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ node --version</span><br></pre></td></tr></table></figure><p><strong>如图：</strong><br><img src="https://i.loli.net/2018/11/23/5bf78d0c6b6c9.jpg" alt="QQ图片20181123131442.jpg"></p><h1 id="二、使用npm安装一个静态服务器"><a href="#二、使用npm安装一个静态服务器" class="headerlink" title="二、使用npm安装一个静态服务器"></a>二、使用npm安装一个静态服务器</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g http-server</span><br></pre></td></tr></table></figure><h3 id="1、npm是什么"><a href="#1、npm是什么" class="headerlink" title="1、npm是什么"></a>1、npm是什么</h3><p>npm是一个node包管理和分发工具，已经成为了非官方的发布node模块（包）的标准。有了npm，可以很快的找到特定服务要使用的包，进行下载、安装以及管理已经安装的包。新版的nodejs已经集成了npm，所以之前npm也一并安装好了。</p><h3 id="2、npm的作用"><a href="#2、npm的作用" class="headerlink" title="2、npm的作用"></a>2、npm的作用</h3><p>npm是随同Nodejs一起安装的包管理工具，能解决Nodejs代码部署上的很多问题。</p><h3 id="3、再次打开终端"><a href="#3、再次打开终端" class="headerlink" title="3、再次打开终端"></a>3、再次打开终端</h3><p><strong>操作以下步骤：</strong><br>（1）开启npm</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm</span><br></pre></td></tr></table></figure><p>（2）用npm安装http-sever</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g http-server</span><br></pre></td></tr></table></figure><p><strong>结论：</strong> http-server被安装成功，可以开启一个静态服务器<br><strong>注：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-g</span><br></pre></td></tr></table></figure><p>为全局安装模式，去掉-g之后就是本地模式，如果出错就可以试一下本地模式</p><p><strong>题外话：</strong> 关于本地模式和全局模式的问题，这里就不展开讲了，比较菜不耽误别人。需要的可以看一下这两篇文章：</p><ul><li><a href="http://blog.csdn.net/edagarli/article/details/23958435" target="_blank" rel="noopener">nodejs本地模式和全局模式</a></li><li><a href="http://jin541223.blog.163.com/blog/static/1637398052012111122751840/" target="_blank" rel="noopener">node.js 本地模式与全局模式的区别</a></li></ul><p><strong>划重点：</strong> 有些人的电脑如果提示错误（我的就是这样?），不要抓狂，试一下是否需要管理员权限：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo npm install -g http-server</span><br></pre></td></tr></table></figure><p>windows不需要管这个</p><p>（3）开启http-server（这个是一个服务器哦）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  http-server</span><br></pre></td></tr></table></figure><p>（4）尝试启动http-server在浏览器打开你的本地文件<br>在命令行假设在桌面（desktop）操作一个名为code文件夹中的from.html文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ls</span><br><span class="line">$ cd code</span><br><span class="line">$ http-server</span><br></pre></td></tr></table></figure><p>此时，将会出现服务器的url，复制下来在浏览器中打开，在code目录下启动这个静态服务器，用新的url来展示code文件夹下所相对应的html文件夹。<br><strong>结论</strong>：这种方式，就不是我们用本地的方式打开html文件</p><p>（5）退出http-server<br>在终端上Ctrl+c，便会退出http-server</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;掌握了终端的一些基本命令，可以做点什么呢？用命令行，可以安装一个静态服务器哦~&lt;br&gt;&lt;strong&gt;关键词：&lt;/strong&gt; Nodejs、npm、全局安装、http-server&lt;/p&gt;
    
    </summary>
    
      <category term="基础知识" scheme="http://yoursite.com/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
      <category term="命令行" scheme="http://yoursite.com/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%91%BD%E4%BB%A4%E8%A1%8C/"/>
    
    
      <category term="命令行" scheme="http://yoursite.com/tags/%E5%91%BD%E4%BB%A4%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>浅谈命令行（一）：命令行基本操作（包括vim在终端的基本操作）</title>
    <link href="http://yoursite.com/2018/11/02/%E6%B5%85%E8%B0%88%E5%91%BD%E4%BB%A4%E8%A1%8C%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%EF%BC%88%E5%8C%85%E6%8B%ACvim%E5%9C%A8%E7%BB%88%E7%AB%AF%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%EF%BC%89/"/>
    <id>http://yoursite.com/2018/11/02/浅谈命令行（一）：命令行基本操作（包括vim在终端的基本操作）/</id>
    <published>2018-11-02T00:22:27.000Z</published>
    <updated>2018-11-23T03:57:12.671Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、命令行"><a href="#一、命令行" class="headerlink" title="一、命令行"></a>一、命令行</h1><h3 id="1、了解一些关键名词："><a href="#1、了解一些关键名词：" class="headerlink" title="1、了解一些关键名词："></a>1、了解一些关键名词：</h3><ul><li>图形界面</li><li>命令行：在终端窗口下输入一些命令就可以满足一些操作需求</li><li>终端：mac下打开终端（terminal），win下打开gitbash</li><li>shell：执行当前脚本的一个载体，统称shell。如输入命令ls，即展示当前文件下的所有文件（ls本质上是字符串），通过shell底层地接受字符串的操作输入，在底层做一些文件检索，最终展示出ls发出的请求的文件</li><li>bash：本质上是一个软件。<a id="more"></a></li></ul><h3 id="2、安装使用"><a href="#2、安装使用" class="headerlink" title="2、安装使用"></a>2、安装使用</h3><ul><li>win安装git，打开gitbash</li><li>linux：打开终端</li><li>mac：打开终端、iterm</li></ul><hr><h1 id="二、基本命令"><a href="#二、基本命令" class="headerlink" title="二、基本命令"></a>二、基本命令</h1><h3 id="1、查看当前完整的路径：pwd"><a href="#1、查看当前完整的路径：pwd" class="headerlink" title="1、查看当前完整的路径：pwd"></a>1、查看当前完整的路径：pwd</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~ $ pwd</span><br></pre></td></tr></table></figure><p><strong>结论：</strong> 就是看看此时我在哪个文件夹下</p><h3 id="2、查看当前目录下文件：ls"><a href="#2、查看当前目录下文件：ls" class="headerlink" title="2、查看当前目录下文件：ls"></a>2、查看当前目录下文件：ls</h3><ul><li><p>不包括隐藏文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  ls</span><br></pre></td></tr></table></figure></li><li><p>查看当前目录下所有文件（包括隐藏文件）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  ls -a</span><br></pre></td></tr></table></figure></li><li><p>查看当前目录下所有文件（包括隐藏文件）的详细信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  ls -al</span><br></pre></td></tr></table></figure></li></ul><p><strong>注：</strong>书籍推荐《鸟叔的linux教程》</p><h3 id="3、切换目录：cd"><a href="#3、切换目录：cd" class="headerlink" title="3、切换目录：cd"></a>3、切换目录：cd</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  cd 文件夹名</span><br></pre></td></tr></table></figure><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$  cd  /c/project</span><br><span class="line">$  cd code</span><br><span class="line">$  cd ../css</span><br><span class="line">$  cd ~/desktop</span><br></pre></td></tr></table></figure><p>两点和一点的区别：</p><ul><li><p>返回上一级文件夹: ..（即返回 ~ 家目录）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  cd ..</span><br></pre></td></tr></table></figure></li><li><p>当前文件夹: . （即desktop这个文件夹）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  cd  ./code</span><br></pre></td></tr></table></figure></li></ul><p><strong>结论：</strong> 即切换到当前目录下的code文件夹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  cd code</span><br></pre></td></tr></table></figure><h3 id="4、文件路径"><a href="#4、文件路径" class="headerlink" title="4、文件路径"></a>4、文件路径</h3><p>（1）根路径：/ （即整个系统最根本的路径）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  cd code</span><br></pre></td></tr></table></figure><p><strong>根目录&gt;家目录</strong><br>如错误示范：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  cd /code</span><br></pre></td></tr></table></figure><p><strong>注：</strong></p><ul><li>如果要操作根路径里的其他文件夹，需要管理员权限</li><li>根路径不是C盘，根路径就是根路径</li></ul><p>（2）家目录：~</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~</span><br></pre></td></tr></table></figure><p>家目录，即当前的用户下的路径 ：如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/Users /wxq393</span><br></pre></td></tr></table></figure><p>如果是:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~ /desktop $</span><br></pre></td></tr></table></figure><p>即是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/Users/wxq393/desktop $</span><br></pre></td></tr></table></figure><p>（3）当前目录：.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd code</span><br><span class="line">$ cd ./code</span><br></pre></td></tr></table></figure><p>（4）上级目录：..</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd ..</span><br><span class="line">$ cd ../code</span><br></pre></td></tr></table></figure><h3 id="5、创建文件-touch"><a href="#5、创建文件-touch" class="headerlink" title="5、创建文件 : touch"></a>5、创建文件 : touch</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ touch readme.md</span><br></pre></td></tr></table></figure><h3 id="6、删除文件-rm"><a href="#6、删除文件-rm" class="headerlink" title="6、删除文件 : rm"></a>6、删除文件 : rm</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rm readme.md</span><br></pre></td></tr></table></figure><p>强制删除文件夹，不提示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rm -rf  helloworld</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rm -r  helloworld</span><br></pre></td></tr></table></figure><h3 id="7、重命名文件-mv"><a href="#7、重命名文件-mv" class="headerlink" title="7、重命名文件 : mv"></a>7、重命名文件 : mv</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mv readme.md  README.md</span><br></pre></td></tr></table></figure><h3 id="8、创建文件夹-mkdir"><a href="#8、创建文件夹-mkdir" class="headerlink" title="8、创建文件夹 : mkdir"></a>8、创建文件夹 : mkdir</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir projects</span><br></pre></td></tr></table></figure><hr><h1 id="三、终端中的编辑器vim的使用"><a href="#三、终端中的编辑器vim的使用" class="headerlink" title="三、终端中的编辑器vim的使用"></a>三、终端中的编辑器vim的使用</h1><p>终端命令行中先创建</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ touch a.html</span><br></pre></td></tr></table></figure><ul><li><p>第一步：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim  a.html</span><br></pre></td></tr></table></figure></li></ul><p>初始进入编辑器命令模式</p><ul><li><p><strong>第二步：</strong><br>键盘上：i<br>进入编辑模式INSERT</p></li><li><p><strong>第三步：</strong><br>键盘左上角：esc<br>INSERT消失，进入命令模式</p></li><li><p><strong>第四步：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">：wq</span><br></pre></td></tr></table></figure></li></ul><p>保存退出</p><p>或者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">：!q</span><br></pre></td></tr></table></figure><p>不保存强制退出</p><ul><li><p>第五步：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat  a.html</span><br></pre></td></tr></table></figure></li></ul><p>查看文件结果</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一、命令行&quot;&gt;&lt;a href=&quot;#一、命令行&quot; class=&quot;headerlink&quot; title=&quot;一、命令行&quot;&gt;&lt;/a&gt;一、命令行&lt;/h1&gt;&lt;h3 id=&quot;1、了解一些关键名词：&quot;&gt;&lt;a href=&quot;#1、了解一些关键名词：&quot; class=&quot;headerlink&quot; title=&quot;1、了解一些关键名词：&quot;&gt;&lt;/a&gt;1、了解一些关键名词：&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;图形界面&lt;/li&gt;
&lt;li&gt;命令行：在终端窗口下输入一些命令就可以满足一些操作需求&lt;/li&gt;
&lt;li&gt;终端：mac下打开终端（terminal），win下打开gitbash&lt;/li&gt;
&lt;li&gt;shell：执行当前脚本的一个载体，统称shell。如输入命令ls，即展示当前文件下的所有文件（ls本质上是字符串），通过shell底层地接受字符串的操作输入，在底层做一些文件检索，最终展示出ls发出的请求的文件&lt;/li&gt;
&lt;li&gt;bash：本质上是一个软件。
    
    </summary>
    
      <category term="基础知识" scheme="http://yoursite.com/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
      <category term="命令行" scheme="http://yoursite.com/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%91%BD%E4%BB%A4%E8%A1%8C/"/>
    
    
      <category term="命令行" scheme="http://yoursite.com/tags/%E5%91%BD%E4%BB%A4%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Github博客教程：03添加分类，标签</title>
    <link href="http://yoursite.com/2018/11/01/Hexo-Github%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B%EF%BC%9A03%E6%B7%BB%E5%8A%A0%E5%88%86%E7%B1%BB%EF%BC%8C%E6%A0%87%E7%AD%BE/"/>
    <id>http://yoursite.com/2018/11/01/Hexo-Github博客教程：03添加分类，标签/</id>
    <published>2018-11-01T06:17:46.000Z</published>
    <updated>2018-11-24T15:05:02.346Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、创建“分类”选项"><a href="#1、创建“分类”选项" class="headerlink" title="1、创建“分类”选项"></a>1、创建“分类”选项</h3><h4 id="1-1-生成“分类”页并添加tpye属性"><a href="#1-1-生成“分类”页并添加tpye属性" class="headerlink" title="1.1 生成“分类”页并添加tpye属性"></a>1.1 生成“分类”页并添加tpye属性</h4><p>打开命令行，进入博客所在文件夹。执行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page categories</span><br></pre></td></tr></table></figure><a id="more"></a><p>成功后会提示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INFO  Created: ~/Documents/blog/source/categories/index.md</span><br></pre></td></tr></table></figure><p>根据上面的路径，找到<code>index.md</code>这个文件，打开后默认内容是这样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章分类</span><br><span class="line">date: 2018-10-31 13:47:40</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>添加<code>type: &quot;categories&quot;</code>到内容中，添加后是这样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章分类</span><br><span class="line">date: 2018-10-31 13:47:40</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>保存并关闭文件。</p><h4 id="1-2-给文章添加“categories”属性"><a href="#1-2-给文章添加“categories”属性" class="headerlink" title="1.2 给文章添加“categories”属性"></a>1.2 给文章添加“categories”属性</h4><p>打开需要添加分类的文章，为其添加categories属性。下方的<code>categories: web前端</code>表示添加这篇文章到“web前端”这个分类。注意：hexo一篇文章只能属于一个分类，也就是说如果在“- web前端”下方添加“-xxx”，hexo不会产生两个分类，而是把分类嵌套（即该文章属于 “- web前端”下的 “-xxx ”分类）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hexo博客+Github博客教程：03添加分类，标签</span><br><span class="line">date: 2018-11-01 14:17:46</span><br><span class="line">categories: </span><br><span class="line">- hexo</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>至此，成功给文章添加分类，点击首页的“分类”可以看到该分类下的所有文章。当然，只有添加了<code>categories: xxx</code>的文章才会被收录到首页的“分类”中。</p><h3 id="2、创建“标签”选项"><a href="#2、创建“标签”选项" class="headerlink" title="2、创建“标签”选项"></a>2、创建“标签”选项</h3><h4 id="2-1-生成“标签”页并添加tpye属性"><a href="#2-1-生成“标签”页并添加tpye属性" class="headerlink" title="2.1 生成“标签”页并添加tpye属性"></a>2.1 生成“标签”页并添加tpye属性</h4><p>打开命令行，进入博客所在文件夹。执行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page tags</span><br></pre></td></tr></table></figure><p>成功后会提示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INFO  Created: ~/Documents/blog/source/tags/index.md</span><br></pre></td></tr></table></figure><p>根据上面的路径，找到<code>index.md</code>这个文件，打开后默认内容是这样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2018-10-31 13:47:40</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>添加<code>type: &quot;tags&quot;</code>到内容中，添加后是这样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章分类</span><br><span class="line">date: 2018-10-31 13:47:40</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>保存并关闭文件。</p><h4 id="2-2-给文章添加“tags”属性"><a href="#2-2-给文章添加“tags”属性" class="headerlink" title="2.2 给文章添加“tags”属性"></a>2.2 给文章添加“tags”属性</h4><p>打开需要添加标签的文章，为其添加tags属性。下方的<code>tags:</code>下方的<code>- jQuery</code> <code>- 表格</code><br><code>- 表单验证</code>就是这篇文章的标签了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hexo博客+Github博客教程：03添加分类，标签</span><br><span class="line">date: 2018-11-01 14:17:46</span><br><span class="line">categories: </span><br><span class="line">- 基础知识</span><br><span class="line">- hexo</span><br><span class="line">tags:</span><br><span class="line">- hexo</span><br><span class="line">- github</span><br><span class="line">- 博客</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>至此，成功给文章添加分类，点击首页的“标签”可以看到该标签下的所有文章。当然，只有添加了<code>tags: xxx</code>的文章才会被收录到首页的“标签”中。</p><p>细心的朋友可能已经发现，这两个的设置几乎一模一样！是的，没错，思路都是一样的。所以我们可以打开scaffolds/post.md文件，在tages:上面加入categories:,保存后，之后执行<code>hexo new 文章名</code>命令生成的文件，页面里就有<code>categories:</code>项了。</p><p>scaffolds目录下，是新建页面的模板，执行新建命令时，是根据这里的模板页来完成的，所以可以在这里根据你自己的需求添加一些默认值。</p><p>教程结束，赶紧去设置吧！</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1、创建“分类”选项&quot;&gt;&lt;a href=&quot;#1、创建“分类”选项&quot; class=&quot;headerlink&quot; title=&quot;1、创建“分类”选项&quot;&gt;&lt;/a&gt;1、创建“分类”选项&lt;/h3&gt;&lt;h4 id=&quot;1-1-生成“分类”页并添加tpye属性&quot;&gt;&lt;a href=&quot;#1-1-生成“分类”页并添加tpye属性&quot; class=&quot;headerlink&quot; title=&quot;1.1 生成“分类”页并添加tpye属性&quot;&gt;&lt;/a&gt;1.1 生成“分类”页并添加tpye属性&lt;/h4&gt;&lt;p&gt;打开命令行，进入博客所在文件夹。执行命令&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new page categories&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="基础知识" scheme="http://yoursite.com/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
      <category term="hexo" scheme="http://yoursite.com/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/hexo/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Github博客教程：02主题优化</title>
    <link href="http://yoursite.com/2018/11/01/Hexo-Github%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B%EF%BC%9A02%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/"/>
    <id>http://yoursite.com/2018/11/01/Hexo-Github博客教程：02主题优化/</id>
    <published>2018-11-01T02:43:18.000Z</published>
    <updated>2018-11-23T03:39:39.692Z</updated>
    
    <content type="html"><![CDATA[<p><strong>这一篇教程将主要介绍个性化博客的配置，并将不定期更新。</strong></p><p>在你存放的Hexo文件夹中有两份主要的配置文件，其名称都是 _config.yml。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。为了描述方便，在以下说明中，将前者称为<strong>站点配置文件</strong>， 后者称为<strong>主题配置文件</strong>。</p><a id="more"></a><h2 id="添加分类模块"><a href="#添加分类模块" class="headerlink" title="添加分类模块"></a>添加分类模块</h2><p>1、新建一个分类页面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page categories</span><br></pre></td></tr></table></figure><p>2、你会发现你的<code>source</code>文件夹下有了<code>categorcies/index.md</code>，打开<code>index.md</code>文件将title设置为<code>title: 分类</code><br> 3、打开 <strong>主题配置文件</strong> 找到<code>menu</code>，将categorcies取消注释<br> 4、把文章归入分类只需在文章的顶部标题下方添加<code>categories</code>字段，即可自动创建分类名并加入对应的分类中<br> 举个栗子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">title: 分类测试文章标题</span><br><span class="line">categories: 分类名</span><br></pre></td></tr></table></figure><h2 id="添加多个分类"><a href="#添加多个分类" class="headerlink" title="添加多个分类"></a>添加多个分类</h2><p>如果你想要把一篇文章设置为两个分类，一个为主分类，第二个为子分类，并且文章在子分类，可以这样写：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">categories: [一级分类名,二级分类名]</span><br></pre></td></tr></table></figure><p>也可以这样写：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">categories:</span><br><span class="line">- 一级分类名</span><br><span class="line">- 二级分类名</span><br></pre></td></tr></table></figure><p>这样这篇文章的主分类为“一级分类名”，子分类为“二级分类名”，并且文章显示在“二级分类名下”类别下。</p><h2 id="添加标签模块"><a href="#添加标签模块" class="headerlink" title="添加标签模块"></a>添加标签模块</h2><p>1、新建一个标签页面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page tags</span><br></pre></td></tr></table></figure><p>2、你会发现你的<code>source</code>文件夹下有了<code>tags/index.md</code>，打开<code>index.md</code>文件将title设置为<code>title: 标签</code><br> 3、打开 <strong>主题配置文件</strong> 找到<code>menu</code>，将tags取消注释<br> 4、把文章添加标签只需在文章的顶部标题下方添加<code>tags</code>字段，即可自动创建标签名并归入对应的标签中<br> 举个栗子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">title: 标签测试文章标题</span><br><span class="line">tags: </span><br><span class="line">  - 标签1</span><br><span class="line">  - 标签2</span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><h2 id="添加关于模块"><a href="#添加关于模块" class="headerlink" title="添加关于模块"></a>添加关于模块</h2><p>1、新建一个关于页面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page about</span><br></pre></td></tr></table></figure><p>2、你会发现你的<code>source</code>文件夹下有了<code>about/index.md</code>，打开<code>index.md</code>文件即可编辑关于你的信息，可以随便编辑。<br>3、打开 <strong>主题配置文件</strong> 找到<code>menu</code>，将about取消注释</p><h2 id="插入摘要"><a href="#插入摘要" class="headerlink" title="插入摘要"></a>插入摘要</h2><p>有时文章比较长，或者想首页更简洁一些，希望在首页只显示摘要而不是全文。Hexo是支持摘要的功能的，只要在文章中插入代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--more--&gt;</span><br></pre></td></tr></table></figure><p>这样在其上的文字即为摘要，在首页中就会出现“阅读更多”的图标，点击则显示全文。</p><h2 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h2><p>使用markdown写文章，插入图片的格式为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![图片名称](链接地址)</span><br></pre></td></tr></table></figure><p>对于hexo，链接地址的写法包括以下几种：</p><ul><li>使用本地路径：在hexo/source目录下新建一个img文件夹，将图片放入该文件夹下，插入图片时链接即为/img/图片名称。</li><li>使用微博图床，地址<a href="https://link.jianshu.com/?t=http://weibotuchuang.sinaapp.com/" target="_blank" rel="noopener">http://weibotuchuang.sinaapp.com/</a>，将图片拖入区域中，会生成图片的URL，这就是链接地址。</li><li>七牛云存储，地址<a href="https://link.jianshu.com/?t=http://www.qiniu.com/" target="_blank" rel="noopener">http://www.qiniu.com/</a>，同样是将图片拖入区域中，会生成图片的URL，或填入其链接地址。</li></ul><p>插入图片的同时，建议开启Fancybox，以next主题为例，打开_config.yml，将fancybox的配置false改成true即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Fancybox</span><br><span class="line">fancybox: true</span><br></pre></td></tr></table></figure><h2 id="居中对齐"><a href="#居中对齐" class="headerlink" title="居中对齐"></a>居中对齐</h2><p>Markdown语法本身没有居中的，但Markdown中支持基本的HTML语法，可以使用HTML语法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;center&gt;居中对齐&lt;/center&gt;</span><br><span class="line">&lt;h1 style=&quot;text-align:center&quot;&gt;居中对齐 &lt;h1&gt;</span><br><span class="line">&lt;h1 style=&quot;text-align:right&quot;&gt;居右对齐 &lt;h1&gt;</span><br></pre></td></tr></table></figure><h2 id="发布照片文章"><a href="#发布照片文章" class="headerlink" title="发布照片文章"></a>发布照片文章</h2><p>修改\scaffolds\photo.md</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">layout: &#123; &#123; layout &#125; &#125;</span><br><span class="line">title: &#123; &#123; title &#125; &#125;</span><br><span class="line">date: &#123; &#123; date &#125; &#125;</span><br><span class="line">tags:</span><br><span class="line">photos:</span><br><span class="line">- &lt;photo url&gt;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>要发布照片文章：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new photo &quot;photoPostName&quot;</span><br></pre></td></tr></table></figure><p>hexo默认会处理全部 markdown 和 html 文件，如果不想让 hexo 解析，可以在文件头中加入 layout: false。</p><h2 id="安装RSS"><a href="#安装RSS" class="headerlink" title="安装RSS"></a>安装RSS</h2><p>在终端执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><p>然后在_config.yml中添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: http://hexo.io/plugins/</span><br><span class="line">plugins: hexo-generate-feed</span><br></pre></td></tr></table></figure><p>然后打开next主题文件夹里面的<code>_config.yml</code>,在里面配置为如下样子：(就是在<code>rss:</code>的后面加上<code>/atom.xml</code>,<strong>注意</strong>在冒号后面要加一个空格)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Set rss to false to disable feed link.</span><br><span class="line"># Leave rss as empty to use site&apos;s feed link.</span><br><span class="line"># Set rss to specific value if you have burned your feed already.</span><br><span class="line">rss: /atom.xml</span><br></pre></td></tr></table></figure><p>配置完之后运行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure><p>重新生成一次，你会在<code>./public</code> 文件夹中看到 <code>atom.xml</code> 文件。然后启动服务器查看是否有效，之后再部署到 Github 中。</p><h2 id="添加动态背景"><a href="#添加动态背景" class="headerlink" title="添加动态背景"></a>添加动态背景</h2><blockquote><p><strong>注意</strong>：如果next主题在5.1.1以上的话就不用我这样设置，直接在主题配置文件中找到canvas_nest: false，把它改为canvas_nest: true就行了（注意分号后面要加一个空格）</p></blockquote><h3 id="修改-layout-swig"><a href="#修改-layout-swig" class="headerlink" title="修改_layout.swig"></a>修改<code>_layout.swig</code></h3><p>打开 <code>next/layout/_layout.swig</code><br>在 <code>&lt; /body&gt;</code>之前添加代码(注意不要放在&lt; /head&gt;的后面)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.canvas_nest %&#125;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>打开 <code>/next/_config.yml</code>,在里面添加如下代码：(可以放在最后面)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># --------------------------------------------------------------</span><br><span class="line"># background settings</span><br><span class="line"># --------------------------------------------------------------</span><br><span class="line"># add canvas-nest effect</span><br><span class="line"># see detail from https://github.com/hustcc/canvas-nest.js</span><br><span class="line">canvas_nest: true</span><br></pre></td></tr></table></figure><p>到此就结束了，运行 <code>hexo clean</code>，然后运行 <code>hexo g</code>,然后运行 <code>hexo s</code>，最后打开浏览器在浏览器的地址栏输入 <code>localhost:4000</code> 就能看到效果了\（￣︶￣）/</p><hr><h3 id="如果你感觉默认的线条太多的话"><a href="#如果你感觉默认的线条太多的话" class="headerlink" title="如果你感觉默认的线条太多的话"></a>如果你感觉默认的线条太多的话</h3><h4 id="可以这么设置-gt"><a href="#可以这么设置-gt" class="headerlink" title="可以这么设置====&gt;"></a>可以这么设置====&gt;</h4><p>在上一步修改 <code>_layout.swig</code>中，把刚才的这些代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.canvas_nest %&#125;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>改为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.canvas_nest %&#125;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;</span><br><span class="line">color=&quot;0,0,255&quot; opacity=&apos;0.7&apos; zIndex=&quot;-2&quot; count=&quot;99&quot; src=&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="配置项说明"><a href="#配置项说明" class="headerlink" title="配置项说明"></a>配置项说明</h3><ul><li><code>color</code> ：线条颜色, 默认: <code>&#39;0,0,0&#39;</code>；三个数字分别为(R,G,B)</li><li><code>opacity</code>: 线条透明度（0~1）, 默认: <code>0.5</code></li><li><code>count</code>: 线条的总数量, 默认: <code>150</code></li><li><code>zIndex:</code> 背景的z-index属性，css属性用于控制所在层的位置, 默认: <code>-1</code></li></ul><h2 id="添加网站图标"><a href="#添加网站图标" class="headerlink" title="添加网站图标"></a>添加网站图标</h2><p>网站图标即浏览网页时显示在标签页或将网页保存在书签时所显示的图标，图标可以视为网站的Logo，是网站个性化的一部分。</p><p><strong>具体方法实现</strong></p><p>在<a href="http://www.easyicon.net/" target="_blank" rel="noopener">EasyIcon</a>中找一张（32*32）的<code>ico</code>图标,或者去别的网站下载或者制作，并将图标名称改为<code>favicon.ico</code>，然后把图标放在<code>/themes/next/source/images</code>里，并且修改主题配置文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Put your favicon.ico into `hexo-site/source/` directory.</span><br><span class="line">favicon: /favicon.ico</span><br></pre></td></tr></table></figure><h2 id="404页面"><a href="#404页面" class="headerlink" title="404页面"></a>404页面</h2><p>直接在根目录下创建自己的404.html。要注意的是，自定义404页面仅对绑定顶级域名的项目才起作用，GitHub默认分配的二级域名是不起作用的，使用hexo server在本机调试也不起作用。</p><p>添加百度站点地图</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-baidu-sitemap@0.1.1 --save</span><br></pre></td></tr></table></figure><p>在_config.yml中添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">baidusitemap:</span><br><span class="line">path: baidusitemap.xml</span><br></pre></td></tr></table></figure><h2 id="更改主题"><a href="#更改主题" class="headerlink" title="更改主题"></a>更改主题</h2><p>下载自己喜欢的主题文件，可以到<a href="https://link.jianshu.com/?t=https://github.com/hexojs/hexo/wiki/Themes" target="_blank" rel="noopener">这里</a>找。放到Hexo目录下的themes文件夹下，然后在_config.yml文件中找到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: http://hexo.io/plugins/</span><br><span class="line">## Themes: http://hexo.io/themes/</span><br><span class="line">theme: landscape //themes文件夹中对应文件夹的名称</span><br></pre></td></tr></table></figure><p>将landscape改为所需要的主题文件的名字，如本博客即使用next，然后执行hexo clean(可省略)，再重新hexo g，hexo d，就能看到新主题的效果。</p><h2 id="导航栏的定制"><a href="#导航栏的定制" class="headerlink" title="导航栏的定制"></a>导航栏的定制</h2><p>打开主题的_config.yml文件，在开头找到如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || home                          //首页</span><br><span class="line">  archives: /archives/ || archive          //归档</span><br><span class="line">  categories: /categories/ || th           //分类</span><br><span class="line">  tags: /tags/ || tags                     //标签</span><br><span class="line">  about: /about/ || user                   //关于</span><br><span class="line">  #schedule: /schedule/ || calendar        //日程表</span><br><span class="line">  #sitemap: /sitemap.xml || sitemap        //站点地图</span><br><span class="line">  #commonweal: /404/ || heartbeat          //公益404</span><br></pre></td></tr></table></figure><p>看看你需要哪个菜单就把哪个取消注释打开就行了；<br> 关于后面的格式，以<code>archives: /archives/ || archive</code>为例：<br> <code>||</code> 之前的<code>/archives/</code>表示标题“归档”，关于标题的格式可以去<code>themes/next/languages/zh-Hans.yml</code>中参考或修改<br> <code>||</code>之后的<code>archive</code>表示图标，可以去<a href="https://link.jianshu.com?t=http%3A%2F%2Ffontawesome.io%2Ficons%2F" target="_blank" rel="noopener">Font Awesome</a>中查看或修改，Next主题所有的图标都来自Font Awesome。</p><h2 id="添加搜索功能"><a href="#添加搜索功能" class="headerlink" title="添加搜索功能"></a>添加搜索功能</h2><p>1、安装 <a href="https://link.jianshu.com?t=https%3A%2F%2Fgithub.com%2Fflashlab%2Fhexo-generator-search" target="_blank" rel="noopener">hexo-generator-searchdb</a> 插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><p>2、打开 <strong>站点配置文件</strong> 找到<code>Extensions</code>在下面添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 搜索</span><br><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure><p>3、打开 <strong>主题配置文件</strong> 找到<code>Local search</code>，将<code>enable</code>设置为<code>true</code></p><h2 id="网站计数"><a href="#网站计数" class="headerlink" title="网站计数"></a>网站计数</h2><p>站点访问计数有名的就是<a href="https://link.jianshu.com/?t=http%3A%2F%2Fbusuanzi.ibruce.info" target="_blank" rel="noopener">不蒜子</a>，使用起来非常方便。<br> 1、安装脚本<br> 打开 <strong>themes/next/layout/_partial/footer.swig</strong>，将下面这段代码添加到里面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">&lt;script async src=&quot;https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;span id=&quot;busuanzi_container_site_pv&quot; style=&apos;display:none&apos;&gt;</span><br><span class="line">    本站总访问量 &lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt; 次</span><br><span class="line">    &lt;span class=&quot;post-meta-divider&quot;&gt;|&lt;/span&gt;</span><br><span class="line">&lt;/span&gt;</span><br><span class="line">&lt;span id=&quot;busuanzi_container_site_uv&quot; style=&apos;display:none&apos;&gt;</span><br><span class="line">    有&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;人看过我的博客啦</span><br><span class="line">&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>添加的位置如下图，可自行根据个人喜好更换位置</p><p><img src="https:////upload-images.jianshu.io/upload_images/4120931-690e9b69d7901c54.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/718/format/webp" alt="img"></p><p> 2、以上只是显示站点的访问次数，如果想显示每篇文章的访问次数，打开 </p><p>themes/next/layout/_macro/post.swig</p><p>，在第一行增加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">is_pv</span><br></pre></td></tr></table></figure><p>字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% macro render(post, is_index, is_pv, post_extra_class) %&#125;</span><br></pre></td></tr></table></figure><p>然后将这段代码插入到里面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if is_pv %&#125;</span><br><span class="line">  &lt;span class=&quot;post-meta-divider&quot;&gt;|&lt;/span&gt;</span><br><span class="line">  &lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt;次阅读</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>插入的位置</p><p><img src="https:////upload-images.jianshu.io/upload_images/4120931-bdbc90ff2c4285a0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/631/format/webp" alt="img"></p><p> 然后再打开 </p><p>themes/next/layout/post.swig</p><p>，这个文件是文章的模板，给render方法传入参数（对应刚才添加的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">is_pv</span><br></pre></td></tr></table></figure><p>字段）</p><p><img src="https:////upload-images.jianshu.io/upload_images/4120931-8418d415c31ff529.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/659/format/webp" alt="img"></p><p> 最后再打开 </p><p>themes/next/layout/index.swig</p><p>，这个文件是首页的模板，给render方法传入参数（对应刚才添加的is_pv字段）</p><p><img src="https:////upload-images.jianshu.io/upload_images/4120931-5d89c00ea392bf01.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/632/format/webp" alt="img"></p><p> OK！设置完毕。</p><h2 id="在右上角或者左上角实现fork-me-on-github"><a href="#在右上角或者左上角实现fork-me-on-github" class="headerlink" title="在右上角或者左上角实现fork me on github"></a>在右上角或者左上角实现fork me on github</h2><p><strong>实现效果图</strong></p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-71cf61436fe2ef27.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="img"></p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-733457ecd3fbe289.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="img"></p><p><strong>具体实现方法</strong></p><p>点击<a href="https://github.com/blog/273-github-ribbons" target="_blank" rel="noopener">这里</a>或者<a href="http://tholman.com/github-corners/" target="_blank" rel="noopener">这里</a>挑选自己喜欢的样式，并复制代码。 例如，我是复制如下代码：<br><img src="http://upload-images.jianshu.io/upload_images/5308475-96b22eacbe43838c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="img"><br>然后粘贴刚才复制的代码到<code>themes/next/layout/_layout.swig</code>文件中(放在<code>&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;</code>的下面)，并把<code>href</code>改为你的github地址<br><img src="http://upload-images.jianshu.io/upload_images/5308475-d2601ad456db064b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="img"></p><h2 id="实现点击出现桃心效果"><a href="#实现点击出现桃心效果" class="headerlink" title="实现点击出现桃心效果"></a>实现点击出现桃心效果</h2><p><strong>实现效果图</strong></p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-78e64c0a80bb559e.gif?imageMogr2/auto-orient/strip" alt="img"></p><p><strong>具体实现方法</strong></p><p>在网址输入如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://7u2ss1.com1.z0.glb.clouddn.com/love.js</span><br></pre></td></tr></table></figure><p>然后将里面的代码copy一下，新建<code>love.js</code>文件并且将代码复制进去，然后保存。将<code>love.js</code>文件放到路径<code>/themes/next/source/js/src</code>里面，然后打开<code>\themes\next\layout\_layout.swig</code>文件,在末尾（在前面引用会出现找不到的bug）添加以下代码：</p><h2 id=""><a href="#" class="headerlink" title=""></a><!-- 页面点击小红心 --></h2><p>undefinedundefined<script type="text/javascript" src="/js/src/love.js"></script></p><h2 id="修改文章内链接文本样式"><a href="#修改文章内链接文本样式" class="headerlink" title="修改文章内链接文本样式"></a>修改文章内链接文本样式</h2><p><strong>实现效果图</strong></p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-8cc4fc18c399af7e.gif?imageMogr2/auto-orient/strip" alt="img"></p><p><strong>具体实现方法</strong></p><p>修改文件 <code>themes\next\source\css\_common\components\post\post.styl</code>，在末尾添加如下css样式，：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// 文章内链接文本样式</span><br><span class="line">.post-body p a&#123;</span><br><span class="line">  color: #0593d3;</span><br><span class="line">  border-bottom: none;</span><br><span class="line">  border-bottom: 1px solid #0593d3;</span><br><span class="line">  &amp;:hover &#123;</span><br><span class="line">    color: #fc6423;</span><br><span class="line">    border-bottom: none;</span><br><span class="line">    border-bottom: 1px solid #fc6423;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中选择<code>.post-body</code> 是为了不影响标题，选择 <code>p</code> 是为了不影响首页“阅读全文”的显示样式,颜色可以自己定义。</p><h2 id="修改文章底部的那个带-号的标签"><a href="#修改文章底部的那个带-号的标签" class="headerlink" title="修改文章底部的那个带#号的标签"></a>修改文章底部的那个带#号的标签</h2><p><strong>实现效果图</strong></p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-9f1817d2d7627f7a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="img"></p><p><strong>具体实现方法</strong></p><p>修改模板<code>/themes/next/layout/_macro/post.swig</code>，搜索 <code>rel=&quot;tag&quot;&gt;#</code>，将 # 换成<code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code></p><h2 id="在每篇文章末尾统一添加“本文结束”标记"><a href="#在每篇文章末尾统一添加“本文结束”标记" class="headerlink" title="在每篇文章末尾统一添加“本文结束”标记"></a>在每篇文章末尾统一添加“本文结束”标记</h2><p><strong>实现效果图</strong></p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-90be73acbc5f8a7a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="img"></p><p><strong>具体实现方法</strong></p><p>在路径 <code>\themes\next\layout\_macro</code> 中新建 <code>passage-end-tag.swig</code> 文件,并添加以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    &#123;% if not is_index %&#125;</span><br><span class="line">        &lt;div style=&quot;text-align:center;color: #ccc;font-size:14px;&quot;&gt;-------------本文结束&lt;i class=&quot;fa fa-paw&quot;&gt;&lt;/i&gt;感谢您的阅读-------------&lt;/div&gt;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>接着打开<code>\themes\next\layout\_macro\post.swig</code>文件，在<code>post-body</code> 之后， <code>post-footer</code> 之前添加如下画红色部分代码（post-footer之前两个DIV）：</p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-865c7f94f89b907e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="img"></p><p>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">  &#123;% if not is_index %&#125;</span><br><span class="line">    &#123;% include &apos;passage-end-tag.swig&apos; %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>然后打开主题配置文件（<code>_config.yml</code>),在末尾添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 文章末尾添加“本文结束”标记</span><br><span class="line">passage_end_tag:</span><br><span class="line">  enabled: true</span><br></pre></td></tr></table></figure><p>完成以上设置之后，在每篇文章之后都会添加如上效果图的样子。</p><h2 id="侧边栏社交小图标设置"><a href="#侧边栏社交小图标设置" class="headerlink" title="侧边栏社交小图标设置"></a>侧边栏社交小图标设置</h2><p><strong>实现效果图</strong></p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-20e8bba1ad3b343f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="img"></p><p><strong>具体实现方法</strong></p><p>打开主题配置文件（<code>_config.yml</code>），搜索<code>social_icons:</code>,在<a href="http://fontawesome.io/icons/" target="_blank" rel="noopener">图标库</a>找自己喜欢的小图标，并将名字复制在如下位置，保存即可</p><h2 id="-1"><a href="#-1" class="headerlink" title=""></a><img src="http://upload-images.jianshu.io/upload_images/5308475-21e22b05edc57b5b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="img"></h2><h2 id="侧边栏推荐阅读"><a href="#侧边栏推荐阅读" class="headerlink" title="侧边栏推荐阅读"></a>侧边栏推荐阅读</h2><p>今天有位网友问推荐阅读是怎么弄，其实挺简单的，打开主题配置文件修改成这样就行了(links里面写你想要的链接):</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># Blogrolls</span><br><span class="line">links_title: 推荐阅读</span><br><span class="line">#links_layout: block</span><br><span class="line">links_layout: inline</span><br><span class="line">links:</span><br><span class="line">  阮一峰: http://www.ruanyifeng.com/</span><br><span class="line">  张鑫旭: http://www.zhangxinxu.com/</span><br><span class="line">  百度前端技术学院: http://ife.baidu.com/</span><br><span class="line">  google前端开发基础: http://wf.uisdc.com/cn/</span><br></pre></td></tr></table></figure><h2 id="添加评论系统"><a href="#添加评论系统" class="headerlink" title="添加评论系统"></a>添加评论系统</h2><blockquote><p>目前国内比较有名的多说、网易云跟帖评论系统都已停止服务了，国外的Disqus评论系统还得需要翻墙，所以不推荐使用，剩下的还有搜狐畅言、友言、来必力等。<br> 本来想使用畅言的，结果注册完之后还得要求备案，我只想说F开头的那个单词，果断放弃。<br> 后来选择了友言</p></blockquote><p>1、进入<a href="https://link.jianshu.com?t=http%3A%2F%2Fwww.uyan.cc" target="_blank" rel="noopener">友言官网</a>注册、登录步骤我就不介绍了<br> 2、登录完成之后，点击获取代码，你会发现出来了一段代码，里面有你的<code>uid=1234567</code><br> 3、打开 <strong>主题配置文件</strong> 找到<code>youyan_uid</code>将值设置为上面的uid就可以了</p><h2 id="主页文章添加阴影效果"><a href="#主页文章添加阴影效果" class="headerlink" title="主页文章添加阴影效果"></a>主页文章添加阴影效果</h2><p><strong>实现效果图</strong></p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-21046c442900bf3f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="img"></p><p><strong>具体实现方法</strong></p><p>打开<code>\themes\next\source\css\_custom\custom.styl</code>,向里面加入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 主页文章添加阴影效果</span><br><span class="line"> .post &#123;</span><br><span class="line">   margin-top: 60px;</span><br><span class="line">   margin-bottom: 60px;</span><br><span class="line">   padding: 25px;</span><br><span class="line">   -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5);</span><br><span class="line">   -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="网站底部字数统计"><a href="#网站底部字数统计" class="headerlink" title="网站底部字数统计"></a>网站底部字数统计</h2><p><strong>实现效果图</strong></p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-f26f21e2f2b34e18.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="img"></p><p><strong>具体方法实现</strong><br>切换到根目录下，然后运行如下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure><p>然后在<code>/themes/next/layout/_partials/footer.swig</code>文件尾部加上：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;theme-info&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;powered-by&quot;&gt;&lt;/div&gt;</span><br><span class="line">  &lt;span class=&quot;post-count&quot;&gt;博客全站共&#123;&#123; totalcount(site) &#125;&#125;字&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="实现统计功能"><a href="#实现统计功能" class="headerlink" title="实现统计功能"></a>实现统计功能</h2><p><strong>实现效果图</strong><br><img src="http://upload-images.jianshu.io/upload_images/5308475-11cf11fe888748a9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="img"></p><p><strong>具体实现方法</strong></p><p>在根目录下安装 <code>hexo-wordcount</code>,运行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure><p>然后在主题的配置文件中，配置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Post wordcount display settings</span><br><span class="line"># Dependencies: https://github.com/willin/hexo-wordcount</span><br><span class="line">post_wordcount:</span><br><span class="line">  item_text: true</span><br><span class="line">  wordcount: true</span><br><span class="line">  min2read: true</span><br></pre></td></tr></table></figure><h2 id="-2"><a href="#-2" class="headerlink" title=""></a><img src="http://upload-images.jianshu.io/upload_images/5308475-6d44a78e76dbf950.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="img"></h2><h2 id="在文章底部增加版权信息"><a href="#在文章底部增加版权信息" class="headerlink" title="在文章底部增加版权信息"></a>在文章底部增加版权信息</h2><p><strong>实现效果图</strong></p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-a264542f53665849.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="img"></p><p>在目录 <code>next/layout/_macro/下</code>添加 <code>my-copyright.swig</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if page.copyright %&#125;</span><br><span class="line">&lt;div class=&quot;my_post_copyright&quot;&gt;</span><br><span class="line">  &lt;script src=&quot;//cdn.bootcss.com/clipboard.js/1.5.10/clipboard.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  </span><br><span class="line">  &lt;!-- JS库 sweetalert 可修改路径 --&gt;</span><br><span class="line">  &lt;script src=&quot;https://cdn.bootcss.com/jquery/2.0.0/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script src=&quot;https://unpkg.com/sweetalert/dist/sweetalert.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;本文标题:&lt;/span&gt;&lt;a href=&quot;&#123;&#123; url_for(page.path) &#125;&#125;&quot;&gt;&#123;&#123; page.title &#125;&#125;&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;文章作者:&lt;/span&gt;&lt;a href=&quot;/&quot; title=&quot;访问 &#123;&#123; theme.author &#125;&#125; 的个人博客&quot;&gt;&#123;&#123; theme.author &#125;&#125;&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;发布时间:&lt;/span&gt;&#123;&#123; page.date.format(&quot;YYYY年MM月DD日 - HH:mm&quot;) &#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;最后更新:&lt;/span&gt;&#123;&#123; page.updated.format(&quot;YYYY年MM月DD日 - HH:mm&quot;) &#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;原始链接:&lt;/span&gt;&lt;a href=&quot;&#123;&#123; url_for(page.path) &#125;&#125;&quot; title=&quot;&#123;&#123; page.title &#125;&#125;&quot;&gt;&#123;&#123; page.permalink &#125;&#125;&lt;/a&gt;</span><br><span class="line">    &lt;span class=&quot;copy-path&quot;  title=&quot;点击复制文章链接&quot;&gt;&lt;i class=&quot;fa fa-clipboard&quot; data-clipboard-text=&quot;&#123;&#123; page.permalink &#125;&#125;&quot;  aria-label=&quot;复制成功！&quot;&gt;&lt;/i&gt;&lt;/span&gt;</span><br><span class="line">  &lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;许可协议:&lt;/span&gt;&lt;i class=&quot;fa fa-creative-commons&quot;&gt;&lt;/i&gt; &lt;a rel=&quot;license&quot; href=&quot;https://creativecommons.org/licenses/by-nc-nd/4.0/&quot; target=&quot;_blank&quot; title=&quot;Attribution-NonCommercial-NoDerivatives 4.0 International (CC BY-NC-ND 4.0)&quot;&gt;署名-非商业性使用-禁止演绎 4.0 国际&lt;/a&gt; 转载请保留原文链接及作者。&lt;/p&gt;  </span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script&gt; </span><br><span class="line">    var clipboard = new Clipboard(&apos;.fa-clipboard&apos;);</span><br><span class="line">    $(&quot;.fa-clipboard&quot;).click(function()&#123;</span><br><span class="line">      clipboard.on(&apos;success&apos;, function()&#123;</span><br><span class="line">        swal(&#123;   </span><br><span class="line">          title: &quot;&quot;,   </span><br><span class="line">          text: &apos;复制成功&apos;,</span><br><span class="line">          icon: &quot;success&quot;, </span><br><span class="line">          showConfirmButton: true</span><br><span class="line">          &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    &#125;);  </span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>在目录<code>next/source/css/_common/components/post/</code>下添加<code>my-post-copyright.styl</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">.my_post_copyright &#123;</span><br><span class="line">  width: 85%;</span><br><span class="line">  max-width: 45em;</span><br><span class="line">  margin: 2.8em auto 0;</span><br><span class="line">  padding: 0.5em 1.0em;</span><br><span class="line">  border: 1px solid #d3d3d3;</span><br><span class="line">  font-size: 0.93rem;</span><br><span class="line">  line-height: 1.6em;</span><br><span class="line">  word-break: break-all;</span><br><span class="line">  background: rgba(255,255,255,0.4);</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright p&#123;margin:0;&#125;</span><br><span class="line">.my_post_copyright span &#123;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  width: 5.2em;</span><br><span class="line">  color: #b5b5b5;</span><br><span class="line">  font-weight: bold;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright .raw &#123;</span><br><span class="line">  margin-left: 1em;</span><br><span class="line">  width: 5em;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright a &#123;</span><br><span class="line">  color: #808080;</span><br><span class="line">  border-bottom:0;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright a:hover &#123;</span><br><span class="line">  color: #a3d2a3;</span><br><span class="line">  text-decoration: underline;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright:hover .fa-clipboard &#123;</span><br><span class="line">  color: #000;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright .post-url:hover &#123;</span><br><span class="line">  font-weight: normal;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright .copy-path &#123;</span><br><span class="line">  margin-left: 1em;</span><br><span class="line">  width: 1em;</span><br><span class="line">  +mobile()&#123;display:none;&#125;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright .copy-path:hover &#123;</span><br><span class="line">  color: #808080;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改<code>next/layout/_macro/post.swig</code>，在代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">      &#123;% if not is_index %&#125;</span><br><span class="line">        &#123;% include &apos;wechat-subscriber.swig&apos; %&#125;</span><br><span class="line">      &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>之前添加增加如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">      &#123;% if not is_index %&#125;</span><br><span class="line">        &#123;% include &apos;my-copyright.swig&apos; %&#125;</span><br><span class="line">      &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>如下：</p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-769a382b6c9ada3e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="img"></p><p>修改<code>next/source/css/_common/components/post/post.styl</code>文件，在最后一行增加代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@import &quot;my-post-copyright&quot;</span><br></pre></td></tr></table></figure><p>保存重新生成即可。<br>如果要在该博文下面增加版权信息的显示，需要在 Markdown 中增加copyright: true的设置，类似：</p><blockquote><p><strong>小技巧</strong>：如果你觉得每次都要输入<code>copyright: true</code>很麻烦的话,那么在<code>/scaffolds/post.md</code>文件中添加：<br><img src="http://upload-images.jianshu.io/upload_images/5308475-51f087ce1f1903a6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="img"><br>这样每次<code>hexo new &quot;你的内容&quot;</code>之后，生成的md文件会自动把<code>copyright:</code>加到里面去<br>(<strong>注意</strong>：如果解析出来之后，你的原始链接有问题：如：<code>http://yoursite.com/前端小项目：使用canvas绘画哆啦A梦.html</code>,那么在根目录下<code>_config.yml</code>中写成类似这样：）<br><img src="http://upload-images.jianshu.io/upload_images/5308475-980129b36907d103.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="img">就行了。</p></blockquote><h2 id="隐藏网页底部powered-By-Hexo-强力驱动"><a href="#隐藏网页底部powered-By-Hexo-强力驱动" class="headerlink" title="隐藏网页底部powered By Hexo / 强力驱动"></a>隐藏网页底部powered By Hexo / 强力驱动</h2><p>打开<code>themes/next/layout/_partials/footer.swig</code>,使用”<!-- -->”隐藏之间的代码即可，或者直接删除。位置如图：</p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-8e8340c7a0489bce.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="img"></p><hr><h2 id="博文置顶"><a href="#博文置顶" class="headerlink" title="博文置顶"></a>博文置顶</h2><p>修改 <code>hero-generator-index</code> 插件，把文件：<code>node_modules/hexo-generator-index/lib/generator.js</code> 内的代码替换为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&apos;use strict&apos;;</span><br><span class="line">var pagination = require(&apos;hexo-pagination&apos;);</span><br><span class="line">module.exports = function(locals)&#123;</span><br><span class="line">  var config = this.config;</span><br><span class="line">  var posts = locals.posts;</span><br><span class="line">    posts.data = posts.data.sort(function(a, b) &#123;</span><br><span class="line">        if(a.top &amp;&amp; b.top) &#123; // 两篇文章top都有定义</span><br><span class="line">            if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排</span><br><span class="line">            else return b.top - a.top; // 否则按照top值降序排</span><br><span class="line">        &#125;</span><br><span class="line">        else if(a.top &amp;&amp; !b.top) &#123; // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）</span><br><span class="line">            return -1;</span><br><span class="line">        &#125;</span><br><span class="line">        else if(!a.top &amp;&amp; b.top) &#123;</span><br><span class="line">            return 1;</span><br><span class="line">        &#125;</span><br><span class="line">        else return b.date - a.date; // 都没定义按照文章日期降序排</span><br><span class="line">    &#125;);</span><br><span class="line">  var paginationDir = config.pagination_dir || &apos;page&apos;;</span><br><span class="line">  return pagination(&apos;&apos;, posts, &#123;</span><br><span class="line">    perPage: config.index_generator.per_page,</span><br><span class="line">    layout: [&apos;index&apos;, &apos;archive&apos;],</span><br><span class="line">    format: paginationDir + &apos;/%d/&apos;,</span><br><span class="line">    data: &#123;</span><br><span class="line">      __index: true</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>在文章中添加 <code>top</code> 值，数值越大文章越靠前，如</p><hr><p>title: 解决Charles乱码问题</p><p>date: 2017-05-22 22:45:48</p><p>tags: 技巧</p><p>categories: 技巧</p><p>copyright: true</p><p>top: 100</p><hr><h2 id="SEO（搜索引擎优化）"><a href="#SEO（搜索引擎优化）" class="headerlink" title="SEO（搜索引擎优化）"></a>SEO（搜索引擎优化）</h2><p>GoogleWebmasters：站长工具，让博客被Google更好的收录，比如手动让Googlebot抓取、提交Robots、更新Sitemap等。<br>另有百度站长工具。<br>经过测试，发现在Google提交网址并验证网站所有权和手动抓取后，很快就可以直接在Google上搜索到自己的播客网站，而百度则目前仍未能被其搜索引擎所抓取。可以看出Google对个人站长更为友好。</p><h2 id="更多"><a href="#更多" class="headerlink" title="更多"></a>更多</h2><p>1、还有其他更多的主题配置，请查看<a href="https://link.jianshu.com?t=http%3A%2F%2Ftheme-next.iissnan.com%2Ftheme-settings.html" target="_blank" rel="noopener">主题配置</a><br> 2、还有其他更多的插件，请查看<a href="https://link.jianshu.com?t=https%3A%2F%2Fhexo.io%2Fplugins%2F" target="_blank" rel="noopener">Hexo插件</a></p><p>插件改的越多出错的bug风险就越大，毕竟对于小白来说可能一不小心两个插件冲突了自己不知道怎么办，不要逐本求末把太多精力放在这上面，所以先从基础的开始，网上相似的教程也有很多，大家最好找几篇对比着看，了解原理之后进行二次开发。</p><p><strong>本文对网络文章和所使用工具的官方文档多有参考，一并谢过，不一一列举了。</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;这一篇教程将主要介绍个性化博客的配置，并将不定期更新。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在你存放的Hexo文件夹中有两份主要的配置文件，其名称都是 _config.yml。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。为了描述方便，在以下说明中，将前者称为&lt;strong&gt;站点配置文件&lt;/strong&gt;， 后者称为&lt;strong&gt;主题配置文件&lt;/strong&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="基础知识" scheme="http://yoursite.com/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
      <category term="hexo" scheme="http://yoursite.com/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/hexo/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Github博客教程：01基本操作</title>
    <link href="http://yoursite.com/2018/11/01/Hexo-Github%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B%EF%BC%9A01%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    <id>http://yoursite.com/2018/11/01/Hexo-Github博客教程：01基本操作/</id>
    <published>2018-11-01T01:30:39.000Z</published>
    <updated>2018-11-23T03:39:17.659Z</updated>
    
    <content type="html"><![CDATA[<h2 id="搭建步骤"><a href="#搭建步骤" class="headerlink" title="搭建步骤"></a>搭建步骤</h2><ul><li>GitHub创建个人仓库</li><li>安装Git</li><li>安装Node.js</li><li>安装Hexo</li></ul><a id="more"></a><h3 id="部署Github"><a href="#部署Github" class="headerlink" title="部署Github"></a>部署Github</h3><p>为我们的博客提供了托管平台。<br> 首先注册一个GitHub帐号，然后建立与你用户名对应的仓库，仓库名必须为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username.github.io</span><br></pre></td></tr></table></figure><p>同时在Pages中开启Github Pages服务。进入刚才创建的仓库,点击右边菜单中的Settings按钮，在跳转到的页面 Update your site 对应处点击“Automatic page generator”按钮，这样就有了一个github自动生成的页面用来测试的时候使用。之后点击继续。选择主题,点击’Publish page’发布。<br> 再次回到仓库,点击Settings按钮，点击链接就可以看到测试地址页面。<br> 在站点配置文件_config.yml中，找到并修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url: http://username.github.io/</span><br></pre></td></tr></table></figure><p>以及</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: https://github.com/username/username.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>每次将写好的文章部署到Github时，会被要求输入Github用户名和密码。</p><h4 id="添加SSH-Keys"><a href="#添加SSH-Keys" class="headerlink" title="添加SSH Keys"></a>添加SSH Keys</h4><h5 id="什么是SSH-Keys"><a href="#什么是SSH-Keys" class="headerlink" title="什么是SSH Keys"></a>什么是SSH Keys</h5><p>简单说，SSH是一种网络协议，用于计算机之间的加密登录。<br> 如果一个用户从本地计算机，使用SSH协议登录另一台远程计算机，我们就可以认为，这种登录是安全的，即使被中途截获，密码也不会泄露。</p><h5 id="检查SSH-Keys"><a href="#检查SSH-Keys" class="headerlink" title="检查SSH Keys"></a>检查SSH Keys</h5><p>如果不清楚是否已经添加SSH，先检查：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls-al~/.ssh</span><br></pre></td></tr></table></figure><p>如果有id_dsa.pub，id_ecdsa.pub，id_ed25519.pub等，说明有SSH keys。<br> 如果未配置，则返回</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash: ls-al~/.ssh: No such file or directory</span><br></pre></td></tr></table></figure><p>如果没有的话,就生成一个SSH keys：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C &quot;your_email@example.com&quot;</span><br></pre></td></tr></table></figure><p>然后会出现:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file in which to save the key (/Users/you/.ssh/id_rsa):</span><br></pre></td></tr></table></figure><p>就是让你输入SSH keys要保存在哪里,一般不用改,就直接回车就好了。<br> 然后会出现:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Enter passphrase (empty for no passphrase): [Type a passphrase]</span><br><span class="line"># Enter same passphrase again: [Type passphrase again]</span><br></pre></td></tr></table></figure><p>这是要求输入一个密码，<strong>记住这个密码</strong>。</p><p>保存SSH keys</p><p>创建成功后,他会提示你SSH keys保存在哪里:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Your identification has been saved in /Users/you/.ssh/id_rsa.</span><br><span class="line"># Your public key has been saved in /Users/you/.ssh/id_rsa.pub.</span><br><span class="line"># The key fingerprint is:</span><br><span class="line"># 01:0f:f4:3b:ca:85:d6:17:a1:7d:f0:68:9d:f0:a2:db your_email@example.com</span><br></pre></td></tr></table></figure><h5 id="找到SSH-keys"><a href="#找到SSH-keys" class="headerlink" title="找到SSH keys"></a>找到SSH keys</h5><p>根据上一步里告诉你的路径,找到保存SSH keys的地方，其中id_rsa.pub 就是SSH keys。如果为了防止以后找不到，可以把他们自己另存到其它地方。</p><h5 id="为github仓库添加SSH-keys"><a href="#为github仓库添加SSH-keys" class="headerlink" title="为github仓库添加SSH keys"></a>为github仓库添加SSH keys</h5><p>SSH keys创建好了，我们还要把它添加到仓库里去创建的仓库。<br> 点击右侧的Settings，然后在左侧的Deploy keys中选择Add deploy key，点击Add deploy key。<br> 然后把创建的id_rsa.pub里的内容复制到Key里去,Title部分随便填，点击Add key。添加的过程中，还要再输入一次github的密码。</p><h5 id="测试连接"><a href="#测试连接" class="headerlink" title="测试连接"></a>测试连接</h5><p>回到git bash执行:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>它可能会出现一些乱七八糟的提示，最后是问你yes/no,就输入yes。<br> 如果要求输入密码，那这个密码就是之前设置的那个密码（已用黑体并加粗）。如果之前没有设置密码，没忽略此步骤。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Enter passphrase for key &apos;/c/Users/2000104591/.ssh/id_rsa&apos;:</span><br></pre></td></tr></table></figure><p>最后它提示你:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi, 用户名/用户名.github.io! You&apos;ve successfully authenticated, but GitHub does notprovide shell access.</span><br></pre></td></tr></table></figure><h4 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h4><p>什么是Git ?简单来说Git是开源的分布式版本控制系统，用于敏捷高效地处理项目。我们网站在本地搭建好了，需要使用Git同步到GitHub上。如果想要了解Git的细节，参看<a href="https://link.zhihu.com/?target=http%3A//weibo.com/liaoxuefeng" target="_blank" rel="noopener">廖雪峰</a>老师的Git教程：<a href="https://link.zhihu.com/?target=http%3A//www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">Git教程</a> 从Git官网下载：<a href="https://link.zhihu.com/?target=https%3A//git-scm.com/download/win" target="_blank" rel="noopener">Git - Downloading Package</a> 现在的机子基本都是64位的，选择64位的安装包，下载后安装，在命令行里输入git测试是否安装成功，若安装失败，参看其他详细的Git安装教程。安装成功后，将你的Git与GitHub帐号绑定，鼠标右击打开Git Bash或者在菜单里搜索Git Bash，设置user.name和user.email配置信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"你的用户名"</span></span><br><span class="line">git config --global user.email <span class="string">"你的邮箱"</span></span><br></pre></td></tr></table></figure><h4 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h4><p>Hexo基于Node.js，Node.js下载地址：<a href="https://link.zhihu.com/?target=https%3A//nodejs.org/en/download/" target="_blank" rel="noopener">Download | Node.js</a> 下载安装包，注意安装Node.js会包含环境变量及npm的安装，安装后，检测Node.js是否安装成功，在命令行中输入 node -v :</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ node -v</span><br><span class="line">v8.5.0</span><br></pre></td></tr></table></figure><p>检测npm是否安装成功，在命令行中输入npm -v :</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm -v</span><br><span class="line">5.3.0</span><br></pre></td></tr></table></figure><p>到这了，安装Hexo的环境已经全部搭建完成。</p><h4 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h4><h5 id="什么是-Hexo？"><a href="#什么是-Hexo？" class="headerlink" title="什么是 Hexo？"></a>什么是 Hexo？</h5><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。<br>本博客就是借由Hexo搭建而成。</p><p>在上述所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>操作方法是：在一个文件夹中（最好放在一个安全的独立的目录下，尽量不要起中文名作为存放博客的文件夹，我是直接放在桌面的）右键，选择<code>Git Bash Here</code>，即可打开命令窗口。也可以执行如下命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd ~/Desktop:  #进入桌面</span><br><span class="line">mkdir hexo  #创建文件夹hexo，为了存放你的博客各种内容及设置</span><br><span class="line">cd hexo  #进入hexo文件夹</span><br></pre></td></tr></table></figure><p>在该文件夹中执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件，操作方法同上。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init  #初始化</span><br><span class="line">$ npm i      #安装依赖包</span><br></pre></td></tr></table></figure><p>然后安装hexo-deployer-git插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h5 id="本地网页预览"><a href="#本地网页预览" class="headerlink" title="本地网页预览"></a>本地网页预览</h5><p>执行下列命令，生成本地网页并启动预览。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g  #生成本地网页文件</span><br><span class="line">hexo s  #启动预览服务</span><br></pre></td></tr></table></figure><p>其中，<br>npm i   ==  npm install<br>hexo g  ==  hexo generate<br>hexo s  ==  hexo server</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http-server -c-1  #另一种启动本地预览服务的方法，推荐</span><br></pre></td></tr></table></figure><p>当看到<code>INFO Hexo is running at localhost:4000. Press Ctrl+C to stop.</code>时就说明我们已经搭建起本地的Hexo博客，这时到浏览器输入localhost:4000可以看到结果（或者打开<a href="http://127.0.0.1:4000/" target="_blank" rel="noopener">http://127.0.0.1:4000/</a> ），然后按<code>Ctrl+C</code>可以停止预览；如果用后一种办法的在浏览器输入的是： <a href="http://127.0.0.1:8080。" target="_blank" rel="noopener">http://127.0.0.1:8080。</a><br>到此，Hexo的初步使用就告一段落了。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;搭建步骤&quot;&gt;&lt;a href=&quot;#搭建步骤&quot; class=&quot;headerlink&quot; title=&quot;搭建步骤&quot;&gt;&lt;/a&gt;搭建步骤&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;GitHub创建个人仓库&lt;/li&gt;
&lt;li&gt;安装Git&lt;/li&gt;
&lt;li&gt;安装Node.js&lt;/li&gt;
&lt;li&gt;安装Hexo&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="基础知识" scheme="http://yoursite.com/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
      <category term="hexo" scheme="http://yoursite.com/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/hexo/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>一些软件的安装</title>
    <link href="http://yoursite.com/2018/11/01/%E4%B8%80%E4%BA%9B%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2018/11/01/一些软件的安装与配置/</id>
    <published>2018-11-01T01:13:53.000Z</published>
    <updated>2018-11-23T06:26:38.300Z</updated>
    
    <content type="html"><![CDATA[<ul><li>Git Bash 的安装与配置</li><li>Node.js 的安装与配置</li><li>Git 的安装与配置</li><li>VSCode 的安装与配置</li></ul><a id="more"></a><h3 id="Git-Bash-的安装与配置"><a href="#Git-Bash-的安装与配置" class="headerlink" title="Git Bash 的安装与配置"></a>Git Bash 的安装与配置</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><ol><li>从官网下载（算了，太慢了）</li><li>百度网盘：链接: <a href="https://pan.baidu.com/s/1nu99KWp" target="_blank" rel="noopener">https://pan.baidu.com/s/1nu99KWp</a> 密码: jfdf</li></ol><p>双击安装，注意每一步的选项要参考下面的图（如果没有对应的图，就直接下一步）</p><p><img src="https://jscode.me/uploads/default/original/1X/bc39461fc9f4187a18871c5d4970f32b0adfaca5.jpg" alt="img"></p><p><img src="https://jscode.me/uploads/default/original/1X/0cd62e9a327e410bb03c01b547f6ea3338f60bbf.jpg" alt="img"></p><p>下面的路径可以随便填：</p><p><img src="https://jscode.me/uploads/default/original/1X/eaf3227a1d1156cac7e8b16869a5dd834613a620.jpg" alt="img"></p><p><img src="https://jscode.me/uploads/default/original/1X/43caebd30d10c44b5229f5b00e321988f5715784.jpg" alt="img"></p><p><img src="https://jscode.me/uploads/default/original/1X/0c6c62d592a6c19b5a9d95c91a4d89c8c8c9b16d.jpg" alt="img"></p><p><img src="https://jscode.me/uploads/default/original/1X/d576a598c9c6164a2ce2eefe82781232a15805cd.jpg" alt="img"></p><p><img src="https://jscode.me/uploads/default/original/1X/5fe46b202e10af544d920925d4a5847c31a81191.jpg" alt="img"></p><p><img src="https://jscode.me/uploads/default/original/1X/32e071f4b3179f1262482fbc4eff321ca3d29f24.jpg" alt="img"></p><p>好了，安装完成。</p><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>安装成功之后，需要设置一下外观：</p><p><img src="https://jscode.me/uploads/default/original/2X/9/97da20950abae1f161d480b2bc8599a3b0a95f3e.jpg" alt="img"></p><p><img src="https://jscode.me/uploads/default/original/2X/5/5a63af363cb8e01b05283d31d827bf3163aca819.jpg" alt="img"></p><p><img src="https://jscode.me/uploads/default/original/2X/4/445f661f9841aa1855e06312b0788f9bd84e7fd6.jpg" alt="img"></p><p><img src="https://jscode.me/uploads/default/original/2X/f/f99beda047c9c97d82a7e64d36f9084d4110a3c9.jpg" alt="img"></p><p>关闭重启 Git Bash 即可。</p><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><h5 id="第一种使用方式"><a href="#第一种使用方式" class="headerlink" title="第一种使用方式"></a>第一种使用方式</h5><p>找一个目录，在目录上右键点击，然后选中「Git Bash Here」，即可用 Git Bash 打开这个目录。</p><p>试试输入 <code>touch 1.txt</code>，回车后看看目录里是不是多了一个文件。</p><h5 id="第二种使用方式"><a href="#第二种使用方式" class="headerlink" title="第二种使用方式"></a>第二种使用方式</h5><p>直接打开 Git Bash，输入 <code>cd ~/Desktop</code> 即可来到桌面所在的目录。</p><p>试试输入 <code>touch 1.txt</code>，回车后看看桌面上是不是多了一个文件。</p><h5 id="更多命令"><a href="#更多命令" class="headerlink" title="更多命令"></a>更多命令</h5><p>下节课我们会专门学习命令行，你可以试试下面几个简单的命令：</p><ul><li>创建目录：<code>mkdir my-dir</code></li><li>删除目录：<code>rm -r my-dir</code></li><li>创建文件：<code>echo &quot;hello&quot; &gt; newFile.txt</code></li><li>删除文件：<code>rm newFile.txt</code></li></ul><h5 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h5><p><a href="https://jingyan.baidu.com/article/1876c8529390eb890b1376b6.html" target="_blank" rel="noopener">解决git bash无法复制和黏贴</a></p><h3 id="Node-js-的安装与配置"><a href="#Node-js-的安装与配置" class="headerlink" title="Node.js 的安装与配置"></a>Node.js 的安装与配置</h3><ol><li>从<a href="https://nodejs.org/" target="_blank" rel="noopener">官网</a>下载安装包</li><li>百度网盘下载：链接: <a href="https://pan.baidu.com/s/1cMxJcU" target="_blank" rel="noopener">https://pan.baidu.com/s/1cMxJcU</a> 密码: xfyj</li></ol><p>安装了之后</p><ul><li><strong>千万别</strong> 点击 Node.js 的图标</li><li><strong>千万别</strong> 点击 Node.js 的图标</li><li><strong>千万别</strong> 点击 Node.js 的图标</li></ul><p>别问为什么，别点就是了。</p><h4 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h4><p>打开 Git Bash，依次输入以下命令，按回车：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org/</span><br><span class="line">npm config set loglevel http</span><br><span class="line">npm config set progress false</span><br></pre></td></tr></table></figure><p>npm 的配置被存储在 <code>~/.npmrc</code>，你可以随时改。</p><h4 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h4><h5 id="npm-安装命令行小工具"><a href="#npm-安装命令行小工具" class="headerlink" title="npm 安装命令行小工具"></a>npm 安装命令行小工具</h5><p>装了 Node.js 之后我们就可以在 Git Bash 里面使用 node 和 npm 这两个命令了，试试看：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">which node</span><br><span class="line">which npm</span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><p>依次输出看看你得到什么结果。</p><p>接下来跟大家展示一下 npm 的威力。我们可以用 npm 的翻译工具做一个随时可用的小字典，这个小工具的名字叫做 fanyi。</p><p>运行 <code>npm i -g fanyi</code> 即可安装 fanyi，安装完成之后，输入 <code>fanyi frontend</code> 就可以看到对应的中文释义了！</p><p>是不是很帅呢？！</p><h5 id="node-的使用"><a href="#node-的使用" class="headerlink" title="node 的使用"></a>node 的使用</h5><ol><li>进入 Git Bash</li><li>输入 <code>node</code>，回车，就可以进入 node 运行环境，这个时候我们就可以写 JS 了</li><li>试试写最简单的 JS 语句，比如 <code>1+2</code>，回车</li><li><code>2 * 8</code>，回车</li></ol><p>这就是 node 的第一种使用方式</p><h5 id="node-的另一种使用方式"><a href="#node-的另一种使用方式" class="headerlink" title="node 的另一种使用方式"></a>node 的另一种使用方式</h5><p>我们可以先创建一个 JS 文件，然后让 node 运行</p><ol><li>来到桌面：<code>cd ~/Desktop</code></li><li>新建一个目录用来玩耍：<code>mkdir hello-node</code></li><li>进入这个目录：<code>cd hello-node</code></li><li>新建一个有内容的 JS 文件：<code>echo &quot;console.log(&#39;Hi, Node.js&#39;)&quot; &gt; main.js</code>，那么 main.js 就新建成功了</li><li>输入 <code>node main.js</code>，回车，node 就会执行这个 main.js 文件，你会看到「Hi, Node.js」字样</li><li>玩完了，删除 hello-node：<code>cd .. ; rm -rf hello-node</code></li></ol><h3 id="Git-的安装与配置"><a href="#Git-的安装与配置" class="headerlink" title="Git 的安装与配置"></a>Git 的安装与配置</h3><h4 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h4><p>不需要安装，Git Bash 内置了 Git 命令，Git Bash 还内置了以下命令：</p><ul><li>ls</li><li>mkdir</li><li>cp</li><li>mv</li></ul><p>等等，大概有几十个命令，Git Bash 其实是一个 Bash，不是 Git。</p><p>Git Bash 给我们提供了一个虚拟的 Linux 环境，这样我们就不用忍受 Windows 里面垃圾一般的命令行体验了。</p><h4 id="配置-2"><a href="#配置-2" class="headerlink" title="配置"></a>配置</h4><p>请在命令行运行这五句话！！！一定要运行这五句话，不然 git 就不能用了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name 你的英文名字                                      #方便产品经理找（怼）你</span><br><span class="line">git config --global user.email 你的常用邮箱                                      #方便产品经理找（怼）你</span><br><span class="line">git config --global push.default simple                                             # 本来我写的是 matching，不过想了想可能 simple 更好</span><br><span class="line">git config --global core.quotepath false                                           #防止文件名变成数字</span><br><span class="line">git config --global core.editor &quot;vim&quot;                                                   # 使用vim编辑提交信息</span><br></pre></td></tr></table></figure><p>另外很重要的一点！你自己运行 git 的时候注意一下：git remote add origin 后面的地址，不允许使用 https 开头的地址，见下图</p><p><img src="https://i.loli.net/2018/11/23/5bf7980805c7b.png" alt="457.png"><br>记得点击 SSH</p><h3 id="VSCode-的安装与配置"><a href="#VSCode-的安装与配置" class="headerlink" title="VSCode 的安装与配置"></a>VSCode 的安装与配置</h3><p>从<a href="https://code.visualstudio.com/" target="_blank" rel="noopener">官网下载</a>安装包</p><p>安装时把以下选项选中：</p><p><img src="https://i.loli.net/2018/11/23/5bf797f5a1e67.png" alt="222.png"></p><h4 id="使用-2"><a href="#使用-2" class="headerlink" title="使用"></a>使用</h4><ol><li>找个地方新建一个目录（目录名不要中文），假设目录名为 vs-demo</li><li>右键点击该目录，open with code</li><li>使用 Ctrl+Shift+E 打开资源管理器，在 vs-demo 目录里新建 HTML 文件，文件名为 index.html</li><li>在 index.html 依次输入：英文感叹号、<kbd>回车</kbd> 键，即可看到一个完整的 HTML 页面<ul><li>由于 vscode 时常更新，如果 <kbd>回车</kbd> 键不行，就试试 <kbd>Tab</kbd> 键</li></ul></li></ol><p>这种快捷写法叫做 Emmet，目前所有的前端编辑器都支持 Emmet。换句话说，如果一个编辑器没有默认支持 Emmet，你就可以卸载这款编辑器了（比如 Sublime Text 括弧笑）。</p><p>关于 Emmet 的更多快捷写法，见：</p><ol><li><a href="https://docs.emmet.io/" target="_blank" rel="noopener">官网的视频介绍</a></li><li><a href="https://docs.emmet.io/cheat-sheet/" target="_blank" rel="noopener">Emmet 作弊表</a></li></ol><h4 id="配置-3"><a href="#配置-3" class="headerlink" title="配置"></a>配置</h4><p>VSCode 的配置方式就写编辑一个配置文件，打开「文件 - 首选项 - 设置」，对应快捷键为 <kbd>Ctrl</kbd> + <kbd>,</kbd></p><p><img src="https://i.loli.net/2018/11/23/5bf7980064fcd.png" alt="123.png"></p><p>左侧为系统默认配置项，右侧为你要覆盖的配置项。把你要修改的项从左边拷贝到右边，然后保存，即可生效。</p><h4 id="设置字体与字号"><a href="#设置字体与字号" class="headerlink" title="设置字体与字号"></a>设置字体与字号</h4><p>在右侧文件中添加一行（注意末尾要有英文逗号）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;editor.fontSize&quot;: 18,</span><br></pre></td></tr></table></figure><p>保存，字号就变大了。</p><p>设置字体也是类似，添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;editor.fontFamily&quot;: &quot;Consolas, &apos;Courier New&apos;, monospace&quot;,</span><br></pre></td></tr></table></figure><p>即可将字体设置为你想要的。这里推荐「<a href="http://www.iplaysoft.com/top10-programming-fonts.html" target="_blank" rel="noopener">10大最适合编程的字体推荐下载</a>」，够你玩一上午了。我用的编程字体一般是 Source Code Pro 和 M Plus 这两款。</p><p>其实 VSCode 默认的配置就挺好的。</p><h4 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h4><p>VSCode 自带 Emmet、Git 继承和 JS 调试功能（后续会讲到），已经十分完善了，但是还是有一些特殊的需求，这个时候我们就可以安装第三方插件了。由于第三方插件不是微软生产的，所以质量良莠不齐，请注意甄别。</p><p>如果你发现 VSCode 没有 Git 功能：</p><p><img src="https://i.loli.net/2018/11/23/5bf797f54db27.png" alt="145.png"></p><p>那么你只需要在项目目录运行 git init 来激活 git 功能即可。</p><h4 id="安装-open-in-browser"><a href="#安装-open-in-browser" class="headerlink" title="安装 open in browser"></a>安装 open in browser</h4><p>按 Ctrl + Shift + X 打开扩展面板，然后输入 open in browser，点击第一个结果的「安装」按钮，稍等片刻就安装好了（相比之下 Sublime 的插件安装体验就差很多）。</p><p>然后你在任意 HTML 文件右键，就可以看到 Open In Default Browser 这个按钮了，点就试试看。</p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;Git Bash 的安装与配置&lt;/li&gt;
&lt;li&gt;Node.js 的安装与配置&lt;/li&gt;
&lt;li&gt;Git 的安装与配置&lt;/li&gt;
&lt;li&gt;VSCode 的安装与配置&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="基础知识" scheme="http://yoursite.com/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
      <category term="git" scheme="http://yoursite.com/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/git/"/>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
      <category term="node" scheme="http://yoursite.com/tags/node/"/>
    
      <category term="Git Bash" scheme="http://yoursite.com/tags/Git-Bash/"/>
    
  </entry>
  
  <entry>
    <title>HTTP入门</title>
    <link href="http://yoursite.com/2018/10/30/HTTP%E5%85%A5%E9%97%A8/"/>
    <id>http://yoursite.com/2018/10/30/HTTP入门/</id>
    <published>2018-10-30T12:06:06.000Z</published>
    <updated>2018-11-23T06:07:38.577Z</updated>
    
    <content type="html"><![CDATA[<h3 id="什么是HTTP"><a href="#什么是HTTP" class="headerlink" title="什么是HTTP?"></a>什么是HTTP?</h3><p><strong>超文本传输协议</strong>（<a href="https://zh.wikipedia.org/wiki/%E8%8B%B1%E6%96%87" target="_blank" rel="noopener">英文</a>：<strong>H</strong>yper<strong>T</strong>ext <strong>T</strong>ransfer <strong>P</strong>rotocol，<a href="https://zh.wikipedia.org/wiki/%E7%B8%AE%E5%AF%AB" target="_blank" rel="noopener">缩写</a>：<strong>HTTP</strong>）是一种用于分布式、协作式和<a href="https://zh.wikipedia.org/wiki/%E8%B6%85%E5%AA%92%E9%AB%94" target="_blank" rel="noopener">超媒体</a>信息系统的<a href="https://zh.wikipedia.org/wiki/%E5%BA%94%E7%94%A8%E5%B1%82" target="_blank" rel="noopener">应用层协议</a><a href="https://zh.wikipedia.org/wiki/%E8%B6%85%E6%96%87%E6%9C%AC%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE#cite_note-ietf2616-1" target="_blank" rel="noopener">[1]</a>。HTTP是<a href="https://zh.wikipedia.org/wiki/%E5%85%A8%E7%90%83%E8%B3%87%E8%A8%8A%E7%B6%B2" target="_blank" rel="noopener">万维网</a>的数据通信的基础。<br><a id="more"></a></p><p>设计HTTP最初的目的是为了提供一种发布和接收<a href="https://zh.wikipedia.org/wiki/HTML" target="_blank" rel="noopener">HTML</a>页面的方法。通过HTTP或者HTTPS协议请求的资源由<a href="https://zh.wikipedia.org/wiki/%E7%B5%B1%E4%B8%80%E8%B3%87%E6%BA%90%E6%A8%99%E8%AD%98%E7%AC%A6" target="_blank" rel="noopener">统一资源标识符</a>（Uniform Resource Identifiers，URI）来标识。</p><p>HTTP的发展是由<a href="https://zh.wikipedia.org/wiki/%E6%8F%90%E5%A7%86%C2%B7%E6%9F%8F%E5%85%A7%E8%8C%B2-%E6%9D%8E" target="_blank" rel="noopener">蒂姆·伯纳斯-李</a>于1989年在<a href="https://zh.wikipedia.org/wiki/%E6%AD%90%E6%B4%B2%E6%A0%B8%E5%AD%90%E7%A0%94%E7%A9%B6%E7%B5%84%E7%B9%94" target="_blank" rel="noopener">欧洲核子研究组织</a>（CERN）所发起。HTTP的标准制定由<a href="https://zh.wikipedia.org/wiki/%E5%85%A8%E7%90%83%E8%B3%87%E8%A8%8A%E7%B6%B2%E5%8D%94%E6%9C%83" target="_blank" rel="noopener">万维网协会</a>（World Wide Web Consortium，W3C）和<a href="https://zh.wikipedia.org/wiki/%E4%BA%92%E8%81%94%E7%BD%91%E5%B7%A5%E7%A8%8B%E4%BB%BB%E5%8A%A1%E7%BB%84" target="_blank" rel="noopener">互联网工程任务组</a>（Internet Engineering Task Force，IETF）进行协调，最终发布了一系列的<a href="https://zh.wikipedia.org/wiki/RFC" target="_blank" rel="noopener">RFC</a>，其中最著名的是1999年6月公布的 <a href="https://tools.ietf.org/html/rfc2616" target="_blank" rel="noopener">RFC 2616</a>，定义了HTTP协议中现今广泛使用的一个版本——HTTP 1.1。</p><h2 id="协议概述"><a href="#协议概述" class="headerlink" title="协议概述"></a>协议概述</h2><p>HTTP是一个客户端终端（用户）和服务器端（网站）请求和应答的标准（<a href="https://zh.wikipedia.org/wiki/TCP" target="_blank" rel="noopener">TCP</a>）。通过使用<a href="https://zh.wikipedia.org/wiki/%E7%B6%B2%E9%A0%81%E7%80%8F%E8%A6%BD%E5%99%A8" target="_blank" rel="noopener">网页浏览器</a>、<a href="https://zh.wikipedia.org/wiki/%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB" target="_blank" rel="noopener">网络爬虫</a>或者其它的工具，客户端发起一个HTTP请求到服务器上指定端口（默认<a href="https://zh.wikipedia.org/wiki/%E7%AB%AF%E5%8F%A3" target="_blank" rel="noopener">端口</a>为80）。我们称这个客户端为用户代理程序（user agent）。应答的服务器上存储着一些资源，比如HTML文件和图像。我们称这个应答服务器为源服务器（origin server）。在用户代理和源服务器中间可能存在多个“中间层”，比如<a href="https://zh.wikipedia.org/wiki/%E4%BB%A3%E7%90%86%E4%BC%BA%E6%9C%8D%E5%99%A8" target="_blank" rel="noopener">代理服务器</a>、<a href="https://zh.wikipedia.org/wiki/%E7%BD%91%E5%85%B3" target="_blank" rel="noopener">网关</a>或者<a href="https://zh.wikipedia.org/wiki/%E9%9A%A7%E9%81%93" target="_blank" rel="noopener">隧道</a>（tunnel）。</p><p>尽管<a href="https://zh.wikipedia.org/wiki/TCP/IP" target="_blank" rel="noopener">TCP/IP</a>协议是互联网上最流行的应用，HTTP协议中，并没有规定必须使用它或它支持的层。事实上，HTTP可以在任何互联网协议上，或其他网络上实现。HTTP假定其下层协议提供可靠的传输。因此，任何能够提供这种保证的协议都可以被其使用。因此也就是其在TCP/IP协议族使用TCP作为其传输层。</p><p>通常，由HTTP客户端发起一个请求，创建一个到服务器指定端口（默认是80端口）的TCP连接。HTTP服务器则在那个端口监听客户端的请求。一旦收到请求，服务器会向客户端返回一个状态，比如”HTTP/1.1 200 OK”，以及返回的内容，如请求的文件、错误消息、或者其它信息。</p><h2 id="请求方法"><a href="#请求方法" class="headerlink" title="请求方法"></a>请求方法</h2><p>HTTP/1.1协议中共定义了八种方法（也叫“动作”）来以不同方式操作指定的资源：</p><ul><li><p>GET</p><p>向指定的资源发出“显示”请求。使用GET方法应该只用在读取数据，而不应当被用于产生“副作用”的操作中，例如在<a href="https://zh.wikipedia.org/wiki/%E7%B6%B2%E9%A0%81%E6%87%89%E7%94%A8%E7%A8%8B%E5%BC%8F" target="_blank" rel="noopener">Web Application</a>中。其中一个原因是GET可能会被<a href="https://zh.wikipedia.org/wiki/%E7%BD%91%E7%BB%9C%E8%9C%98%E8%9B%9B" target="_blank" rel="noopener">网络蜘蛛</a>等随意访问。参见<a href="https://zh.wikipedia.org/wiki/%E8%B6%85%E6%96%87%E6%9C%AC%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE#%E5%AE%89%E5%85%A8%E6%96%B9%E6%B3%95" target="_blank" rel="noopener">安全方法</a></p></li><li><p>HEAD</p><p>与GET方法一样，都是向服务器发出指定资源的请求。只不过服务器将不传回资源的本文部分。它的好处在于，使用这个方法可以在不必传输全部内容的情况下，就可以获取其中“关于该资源的信息”（元信息或称元数据）。</p></li><li><p>POST</p><p>向指定资源提交数据，请求服务器进行处理（例如提交表单或者上传文件）。数据被包含在请求本文中。这个请求可能会创建新的资源或修改现有资源，或二者皆有。</p></li><li><p>PUT</p><p>向指定资源位置上传其最新内容。</p></li><li><p>DELETE</p><p>请求服务器删除Request-URI所标识的资源。</p></li><li><p>TRACE</p><p>回显服务器收到的请求，主要用于测试或诊断。</p></li><li><p>OPTIONS</p><p>这个方法可使服务器传回该资源所支持的所有HTTP请求方法。用’*’来代替资源名称，向Web服务器发送OPTIONS请求，可以测试服务器功能是否正常运作。</p></li><li><p>CONNECT</p><p>HTTP/1.1协议中预留给能够将连接改为管道方式的代理服务器。通常用于SSL加密服务器的链接（经由非加密的HTTP代理服务器）。</p></li></ul><p>方法名称是区分大小写的。当某个请求所针对的资源不支持对应的请求方法的时候，服务器应当返回<a href="https://zh.wikipedia.org/wiki/HTTP%E7%8A%B6%E6%80%81%E7%A0%81#405" target="_blank" rel="noopener">状态码405</a>（Method Not Allowed），当服务器不认识或者不支持对应的请求方法的时候，应当返回<a href="https://zh.wikipedia.org/wiki/HTTP%E7%8A%B6%E6%80%81%E7%A0%81#501" target="_blank" rel="noopener">状态码501</a>（Not Implemented）。</p><h3 id="状态码"><a href="#状态码" class="headerlink" title="状态码"></a>状态码</h3><p>所有HTTP响应的第一行都是<strong>状态行</strong>，依次是当前HTTP版本号，3位数字组成的<a href="https://zh.wikipedia.org/wiki/HTTP%E7%8A%B6%E6%80%81%E7%A0%81" target="_blank" rel="noopener">状态代码</a>，以及描述状态的短语，彼此由空格分隔。</p><p>状态代码的第一个数字代表当前响应的类型：</p><ul><li><a href="https://zh.wikipedia.org/wiki/HTTP%E7%8A%B6%E6%80%81%E7%A0%81#1xx%E6%B6%88%E6%81%AF" target="_blank" rel="noopener">1xx消息</a>——请求已被服务器接收，继续处理</li><li><a href="https://zh.wikipedia.org/wiki/HTTP%E7%8A%B6%E6%80%81%E7%A0%81#2xx%E6%88%90%E5%8A%9F" target="_blank" rel="noopener">2xx成功</a>——请求已成功被服务器接收、理解、并接受</li><li><a href="https://zh.wikipedia.org/wiki/HTTP%E7%8A%B6%E6%80%81%E7%A0%81#3xx%E9%87%8D%E5%AE%9A%E5%90%91" target="_blank" rel="noopener">3xx重定向</a>——需要后续操作才能完成这一请求</li><li><a href="https://zh.wikipedia.org/wiki/HTTP%E7%8A%B6%E6%80%81%E7%A0%81#4xx%E8%AF%B7%E6%B1%82%E9%94%99%E8%AF%AF" target="_blank" rel="noopener">4xx请求错误</a>——请求含有词法错误或者无法被执行</li><li><a href="https://zh.wikipedia.org/wiki/HTTP%E7%8A%B6%E6%80%81%E7%A0%81#5xx%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%94%99%E8%AF%AF" target="_blank" rel="noopener">5xx服务器错误</a>——服务器在处理某个正确请求时发生错误</li></ul><h2 id="请求与响应"><a href="#请求与响应" class="headerlink" title="请求与响应"></a>请求与响应</h2><p>下面是一个HTTP客户端与服务器之间会话的例子，运行于<a href="http://www.baidu.com，端口80。我们可以通过Chrome开发者工具查看HTTP的请求与响应内容。" target="_blank" rel="noopener">www.baidu.com，端口80。我们可以通过Chrome开发者工具查看HTTP的请求与响应内容。</a></p><h3 id="请求"><a href="#请求" class="headerlink" title="请求"></a>请求</h3><p>首先我们需要打开电脑的命令行工具输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -s -v -H <span class="string">"Neil : xxx"</span> -- <span class="string">"https://www.baidu.com"</span></span><br></pre></td></tr></table></figure><h5 id="请求的内容为："><a href="#请求的内容为：" class="headerlink" title="请求的内容为："></a>请求的内容为：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GET / HTTP/1.1</span><br><span class="line">Host: www.baidu.com</span><br><span class="line">User-Agent: curl/7.55.1</span><br><span class="line">Accept: */*</span><br><span class="line">Neil: xxx</span><br></pre></td></tr></table></figure><p>我们还可以通过其他的方法来发送请求：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST -d <span class="string">"1234567890"</span> -s -v -H <span class="string">"Neil : xxx"</span> -- <span class="string">"https://www.baidu.com"</span></span><br></pre></td></tr></table></figure><h5 id="请求的内容为：-1"><a href="#请求的内容为：-1" class="headerlink" title="请求的内容为："></a>请求的内容为：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">POST / HTTP/1.1</span><br><span class="line">Host: www.baidu.com</span><br><span class="line">User-Agent: curl/7.55.1</span><br><span class="line">Accept: */*</span><br><span class="line">Neil: xxx</span><br><span class="line">Content-Length: 10</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line">[10 bytes data]</span><br></pre></td></tr></table></figure><h5 id="请求的格式："><a href="#请求的格式：" class="headerlink" title="请求的格式："></a>请求的格式：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1 动词 路径 协议/版本</span><br><span class="line">2 Key1: value1</span><br><span class="line">2 Key2: value2</span><br><span class="line">2 Key3: value3</span><br><span class="line">2 Content-Type: application/x-www-form-urlencoded</span><br><span class="line">2 Host: www.baidu.com</span><br><span class="line">2 User-Agent: curl/7.54.0</span><br><span class="line">3 </span><br><span class="line">4 要上传的数据</span><br></pre></td></tr></table></figure><p>我们可以得出结论一个完整的HTTP请求包含4个部分，分别为请求行、请求头、空行、其他的消息体，其中第四部分有时也可以为空。</p><h4 id="如何用-Chrome-查看请求内容"><a href="#如何用-Chrome-查看请求内容" class="headerlink" title="如何用 Chrome 查看请求内容"></a>如何用 Chrome 查看请求内容</h4><ol><li>打开 Chrome浏览器F12进入开发者工具点击Network</li><li>地址栏输入网址，比如：<a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a></li><li>在 Network 点击，查看 request，点击「view source」</li><li>如果有请求的第四部分，那么在 FormData 或 Payload 里面可以看到了</li></ol><h3 id="响应"><a href="#响应" class="headerlink" title="响应"></a>响应</h3><p>请求了之后，应该都能得到一个响应，除非断网了，或者服务器宕机了。</p><h5 id="响应示例"><a href="#响应示例" class="headerlink" title="响应示例"></a>响应示例</h5><p>上面两个请求的响应分别为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Accept-Ranges: bytes</span><br><span class="line">Cache-Control: private, no-cache, no-store, proxy-revalidate, no-transform</span><br><span class="line">Connection: Keep-Alive</span><br><span class="line">Content-Length: 2443</span><br><span class="line">Content-Type: text/html</span><br><span class="line">Date: Tue, 10 Oct 2017 09:14:05 GMT</span><br><span class="line">Etag: &quot;5886041d-98b&quot;</span><br><span class="line">Last-Modified: Mon, 23 Jan 2017 13:24:45 GMT</span><br><span class="line">Pragma: no-cache</span><br><span class="line">Server: bfe/1.0.8.18</span><br><span class="line">Set-Cookie: BDORZ=27315; max-age=86400; domain=.baidu.com; path=/</span><br><span class="line"></span><br><span class="line">[2443 bytes data]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 302 Found</span><br><span class="line">Connection: Keep-Alive</span><br><span class="line">Content-Length: 17931</span><br><span class="line">Content-Type: text/html</span><br><span class="line">Date:  Thu, 01 Nov 2018 13:08:49 GMT</span><br><span class="line">Etag: &quot;54d9749e-460b&quot;</span><br><span class="line">Server: bfe/1.0.8.18</span><br><span class="line"></span><br><span class="line">[3824 bytes data]</span><br></pre></td></tr></table></figure><ol><li>GET 请求和 POST 请求对应的响应可以一样，也可以不一样</li><li>响应的第四部分可以很长很长很长</li></ol><h5 id="响应的格式"><a href="#响应的格式" class="headerlink" title="响应的格式"></a>响应的格式</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1 协议/版本号 状态码 状态解释</span><br><span class="line">2 Key1: value1</span><br><span class="line">2 Key2: value2</span><br><span class="line">2 Content-Length: 17931</span><br><span class="line">2 Content-Type: text/html</span><br><span class="line">3</span><br><span class="line">4 要下载的内容</span><br></pre></td></tr></table></figure><h4 id="如何用-Chrome-查看响应内容"><a href="#如何用-Chrome-查看响应内容" class="headerlink" title="如何用 Chrome 查看响应内容"></a>如何用 Chrome 查看响应内容</h4><ol><li>打开 Chrome浏览器F12进入开发者工具点击Network</li><li>地址栏输入网址，比如：<a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a></li><li>在 Network 点击，查看 Response Headers，点击「view source」</li><li>如果有请求的第四部分，点击查看Response或者Preview就可以了</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;什么是HTTP&quot;&gt;&lt;a href=&quot;#什么是HTTP&quot; class=&quot;headerlink&quot; title=&quot;什么是HTTP?&quot;&gt;&lt;/a&gt;什么是HTTP?&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;超文本传输协议&lt;/strong&gt;（&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E8%8B%B1%E6%96%87&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;英文&lt;/a&gt;：&lt;strong&gt;H&lt;/strong&gt;yper&lt;strong&gt;T&lt;/strong&gt;ext &lt;strong&gt;T&lt;/strong&gt;ransfer &lt;strong&gt;P&lt;/strong&gt;rotocol，&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E7%B8%AE%E5%AF%AB&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;缩写&lt;/a&gt;：&lt;strong&gt;HTTP&lt;/strong&gt;）是一种用于分布式、协作式和&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E8%B6%85%E5%AA%92%E9%AB%94&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;超媒体&lt;/a&gt;信息系统的&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E5%BA%94%E7%94%A8%E5%B1%82&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;应用层协议&lt;/a&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E8%B6%85%E6%96%87%E6%9C%AC%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE#cite_note-ietf2616-1&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;[1]&lt;/a&gt;。HTTP是&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E5%85%A8%E7%90%83%E8%B3%87%E8%A8%8A%E7%B6%B2&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;万维网&lt;/a&gt;的数据通信的基础。&lt;br&gt;
    
    </summary>
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="http" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/http/"/>
    
    
      <category term="HTTP" scheme="http://yoursite.com/tags/HTTP/"/>
    
  </entry>
  
</feed>
